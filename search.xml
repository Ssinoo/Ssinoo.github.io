<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>前端学习代码/Vue/todo项目</title>
    <url>/2020/11/20/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%BB%A3%E7%A0%81/Vue/todo%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Vue学了又学，主要的还是要去实现项目的开发和制作，所以网上找了教程做一个简单的Vue的小项目，练练手。</p>
<p><a href="https://www.bilibili.com/video/BV1wy4y1k7Lr?p=2" target="_blank" rel="noopener">b站视频</a></p>
<h1 id="如何找灵感"><a href="#如何找灵感" class="headerlink" title="如何找灵感"></a>如何找灵感</h1><p>根据自己的需求和自己想要实现的东西，</p>
<h2 id="设计图"><a href="#设计图" class="headerlink" title="设计图"></a>设计图</h2><p><a href="https://dribbble.com/search/todo%20app" target="_blank" rel="noopener">一个设计师发布的平台</a> 在上面找找灵感啥的</p>
<h1 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h1><h2 id="需要设计稿"><a href="#需要设计稿" class="headerlink" title="需要设计稿"></a>需要设计稿</h2><p><img src="https://raw.githubusercontent.com/Ssinoo/Blogimg/master/picgo/image-20201120201410432.png" alt="image-20201120201410432"></p>
]]></content>
  </entry>
  <entry>
    <title>前端学习代码/CSS/gird布局</title>
    <url>/2020/11/20/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%BB%A3%E7%A0%81/CSS/gird%E5%B8%83%E5%B1%80/</url>
    <content><![CDATA[<h1 id="Grid布局"><a href="#Grid布局" class="headerlink" title="Grid布局"></a>Grid布局</h1><p><img src="https://raw.githubusercontent.com/Ssinoo/Blogimg/master/picgo/image-20201120194453449.png" alt="image-20201120194453449"></p>
<p><img src="https://raw.githubusercontent.com/Ssinoo/Blogimg/master/picgo/image-20201120194625878.png" alt="image-20201120194625878"></p>
<p><img src="https://raw.githubusercontent.com/Ssinoo/Blogimg/master/picgo/image-20201120194630401.png" alt="image-20201120194630401"></p>
]]></content>
  </entry>
  <entry>
    <title>前端学习代码/JavaScript/Map</title>
    <url>/2020/11/19/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%BB%A3%E7%A0%81/JavaScript/Map/</url>
    <content><![CDATA[<h2 id="3-Map实例的方法"><a href="#3-Map实例的方法" class="headerlink" title="3.Map实例的方法"></a>3.Map实例的方法</h2><h3 id="clear"><a href="#clear" class="headerlink" title="clear()"></a>clear()</h3><p> 删除所有的键值对;</p>
<h3 id="delete-key"><a href="#delete-key" class="headerlink" title="delete(key)"></a>delete(key)</h3><p> 删除指定键;</p>
<h3 id="entries"><a href="#entries" class="headerlink" title="entries()"></a>entries()</h3><p> 返回一个迭代器，迭代器按照对象的插入顺序返回[key,value];</p>
<h3 id="forEach-callback-context"><a href="#forEach-callback-context" class="headerlink" title="forEach(callback,context)"></a>forEach(callback,context)</h3><p>循环执行函数并把键值对作为参数，context为执行函数的上下文this;</p>
<h3 id="get-key"><a href="#get-key" class="headerlink" title="get(key)"></a>get(key)</h3><p>返回Map对象key相对的value值;</p>
<h3 id="has-key"><a href="#has-key" class="headerlink" title="has(key)"></a>has(key)</h3><p>返回布尔值，判断Map对象是否存在指定的key;</p>
<h3 id="keys"><a href="#keys" class="headerlink" title="keys()"></a>keys()</h3><p>返回一个迭代器，迭代器按照插入的顺序返回每一个key元素;</p>
<h3 id="set-key-value"><a href="#set-key-value" class="headerlink" title="set(key,value)"></a>set(key,value)</h3><p>给Map对象设置key/value键值对，返回这个Map对象(相对于JavaScript的Set，Set对象添加元素的方法叫add,而Map对象添加元素的方法为set)</p>
<p>iterator 和entireds()方法一样，返回一个迭代器，迭代器按照对象的插入顺序返回[key,value]</p>
]]></content>
  </entry>
  <entry>
    <title>品优购项目</title>
    <url>/2020/11/19/%E4%BB%A5%E5%89%8D%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%9C%E8%A5%BF/%E5%93%81%E4%BC%98%E8%B4%AD%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>前端学习代码/项目经验/品优购代码规范</title>
    <url>/2020/11/18/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%BB%A3%E7%A0%81/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E9%AA%8C/%E5%93%81%E4%BC%98%E8%B4%AD%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/</url>
    <content><![CDATA[<h1 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h1><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><p>欢迎使用品优购代码规范， 这个是我借鉴京东前端代码规范，组织的品优购内部规范。旨在增强团队开发协作、提高代码质量和打造开发基石的编码规范，</p>
<p>以下规范是团队基本约定的内容，必须严格遵循。</p>
<h4 id="HTML规范"><a href="#HTML规范" class="headerlink" title="HTML规范"></a>HTML规范</h4><p>基于 <a href="http://www.w3.org/" target="_blank" rel="noopener">W3C</a>、<a href="https://developer.apple.com/" target="_blank" rel="noopener">苹果开发者</a> 等官方文档，并结合团队业务和开发过程中总结的规范约定，让页面HTML代码更具语义性。</p>
<h4 id="图片规范"><a href="#图片规范" class="headerlink" title="图片规范"></a>图片规范</h4><p>了解各种图片格式特性，根据特性制定图片规范，包括但不限于图片的质量约定、图片引入方式、图片合并处理等，旨在从图片层面优化页面性能。</p>
<h4 id="CSS规范"><a href="#CSS规范" class="headerlink" title="CSS规范"></a>CSS规范</h4><p>统一规范团队 CSS 代码书写风格和使用 CSS 预编译语言语法风格，提供常用媒体查询语句和浏览器私有属性引用，并从业务层面统一规范常用模块的引用。</p>
<h4 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h4><p>从 <code>目录</code>、<code>图片</code>、<code>HTML/CSS文件</code>、<code>ClassName</code> 的命名等层面约定规范团队的命名习惯，增强团队代码的可读性。</p>
<h2 id="2-HTML-规范"><a href="#2-HTML-规范" class="headerlink" title="2. HTML 规范"></a>2. HTML 规范</h2><h3 id="DOCTYPE-声明"><a href="#DOCTYPE-声明" class="headerlink" title="DOCTYPE 声明"></a>DOCTYPE 声明</h3><p>HTML文件必须加上 DOCTYPE 声明，并统一使用 HTML5 的文档声明：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>HTML5标准模版</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML5标准模版<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="页面语言lang"><a href="#页面语言lang" class="headerlink" title="页面语言lang"></a>页面语言lang</h3><p>推荐使用属性值 <code>cmn-Hans-CN</code>（简体, 中国大陆），但是考虑浏览器和操作系统的兼容性，目前仍然使用 <code>zh-CN</code> 属性值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html lang&#x3D;&quot;zh-CN&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>更多地区语言参考：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zh-SG 中文 (简体, 新加坡)   对应 cmn-Hans-SG 普通话 (简体, 新加坡)</span><br><span class="line">zh-HK 中文 (繁体, 香港)     对应 cmn-Hant-HK 普通话 (繁体, 香港)</span><br><span class="line">zh-MO 中文 (繁体, 澳门)     对应 cmn-Hant-MO 普通话 (繁体, 澳门)</span><br><span class="line">zh-TW 中文 (繁体, 台湾)     对应 cmn-Hant-TW 普通话 (繁体, 台湾)</span><br></pre></td></tr></table></figure>

<h3 id="charset-字符集合"><a href="#charset-字符集合" class="headerlink" title="charset 字符集合"></a>charset 字符集合</h3><p>一般情况下统一使用 “UTF-8” 编码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>由于历史原因，有些业务可能会使用 “GBK” 编码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;meta charset&#x3D;&quot;GBK&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>请尽量统一写成标准的 “UTF-8”，不要写成 “utf-8” 或 “utf8” 或 “UTF8”。根据 <a href="http://www.ietf.org/rfc/rfc3629" target="_blank" rel="noopener">IETF对UTF-8的定义</a>，其编码标准的写法是 “UTF-8”；而 UTF8 或 utf8 的写法只是出现在某些编程系统中，如 .NET framework 的类 System.Text.Encoding 中的一个属性名就叫 UTF8。</p>
<h3 id="书写风格"><a href="#书写风格" class="headerlink" title="书写风格"></a>书写风格</h3><h4 id="HTML代码大小写"><a href="#HTML代码大小写" class="headerlink" title="HTML代码大小写"></a>HTML代码大小写</h4><p>HTML标签名、类名、标签属性和大部分属性值统一用小写</p>
<p><em>推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;demo&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<p><em>不推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;DEMO&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">	</span><br><span class="line">&lt;DIV CLASS&#x3D;&quot;DEMO&quot;&gt;&lt;&#x2F;DIV&gt;</span><br></pre></td></tr></table></figure>
<h3 id="类型属性"><a href="#类型属性" class="headerlink" title="类型属性"></a>类型属性</h3><p>不需要为 CSS、JS 指定类型属性，HTML5 中默认已包含</p>
<p><em>推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&quot; &gt;</span><br><span class="line">&lt;script src&#x3D;&quot;&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p><em>不推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;&quot; &gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&quot; &gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="元素属性"><a href="#元素属性" class="headerlink" title="元素属性"></a>元素属性</h3><ul>
<li>元素属性值使用双引号语法</li>
<li>元素属性值可以写上的都写上</li>
</ul>
<p><em>推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;text&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;name&quot; checked&#x3D;&quot;checked&quot; &gt;</span><br></pre></td></tr></table></figure>

<p><em>不推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;input type&#x3D;text&gt;	</span><br><span class="line">&lt;input type&#x3D;&#39;text&#39;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;name&quot; checked &gt;</span><br></pre></td></tr></table></figure>
<h3 id="特殊字符引用"><a href="#特殊字符引用" class="headerlink" title="特殊字符引用"></a>特殊字符引用</h3><p>文本可以和字符引用混合出现。这种方法可以用来转义在文本中不能合法出现的字符。</p>
<p>在 HTML 中不能使用小于号 “&lt;” 和大于号 “&gt;”特殊字符，浏览器会将它们作为标签解析，若要正确显示，在 HTML 源代码中使用字符实体</p>
<p><em>推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;#&quot;&gt;more&gt;&gt;&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure>

<p><em>不推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;#&quot;&gt;more&gt;&gt;&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure>

<h3 id="代码缩进"><a href="#代码缩进" class="headerlink" title="代码缩进"></a>代码缩进</h3><p>统一使用四个空格进行代码缩进，使得各编辑器表现一致（各编辑器有相关配置）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;jdc&quot;&gt;</span><br><span class="line">    &lt;a href&#x3D;&quot;#&quot;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>
<h3 id="代码嵌套"><a href="#代码嵌套" class="headerlink" title="代码嵌套"></a>代码嵌套</h3><p>元素嵌套规范，每个块状元素独立一行，内联元素可选</p>
<p><em>推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;h1&gt;&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;p&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;div&gt;	</span><br><span class="line">&lt;p&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>

<p><em>不推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;h1&gt;&lt;&#x2F;h1&gt;&lt;p&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;div&gt;	</span><br><span class="line">&lt;p&gt; </span><br><span class="line">    &lt;span&gt;&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;span&gt;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>

<p>段落元素与标题元素只能嵌套内联元素</p>
<p><em>推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;p&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>

<p><em>不推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1&gt;&lt;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;p&gt;&lt;div&gt;&lt;&#x2F;div&gt;&lt;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>
<h2 id="3-图片规范"><a href="#3-图片规范" class="headerlink" title="3. 图片规范"></a>3. 图片规范</h2><h3 id="内容图"><a href="#内容图" class="headerlink" title="内容图"></a>内容图</h3><p>内容图多以商品图等照片类图片形式存在，颜色较为丰富，文件体积较大</p>
<ul>
<li>优先考虑 JPEG 格式，条件允许的话优先考虑 WebP 格式</li>
<li>尽量不使用PNG格式，PNG8 色位太低，PNG24 压缩率低，文件体积大</li>
<li><strong>PC平台单张的图片的大小不应大于 200KB。</strong></li>
</ul>
<h3 id="背景图"><a href="#背景图" class="headerlink" title="背景图"></a>背景图</h3><p>背景图多为图标等颜色比较简单、文件体积不大、起修饰作用的图片</p>
<ul>
<li>PNG 与 GIF 格式，优先考虑使用 PNG 格式,PNG格式允许更多的颜色并提供更好的压缩率</li>
<li>图像颜色比较简单的，如纯色块线条图标，优先考虑使用 PNG8 格式，避免不使用 JPEG 格式</li>
<li>图像颜色丰富而且图片文件不太大的（40KB 以下）或有半透明效果的优先考虑 PNG24 格式</li>
<li>图像颜色丰富而且文件比较大的（40KB - 200KB）优先考虑 JPEG 格式</li>
<li>条件允许的，优先考虑 WebP 代替 PNG 和 JPEG 格式</li>
</ul>
<h2 id="4-CSS规范"><a href="#4-CSS规范" class="headerlink" title="4. CSS规范"></a>4. CSS规范</h2><h3 id="代码格式化"><a href="#代码格式化" class="headerlink" title="代码格式化"></a>代码格式化</h3><p>样式书写一般有两种：一种是紧凑格式 (Compact)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.jdc&#123; display: block;width: 50px;&#125;</span><br></pre></td></tr></table></figure>

<p>一种是展开格式（Expanded）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    display: block;</span><br><span class="line">    width: 50px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>团队约定</strong></p>
<p>统一使用展开格式书写样式</p>
<h3 id="代码大小写"><a href="#代码大小写" class="headerlink" title="代码大小写"></a>代码大小写</h3><p>样式选择器，属性名，属性值关键字全部使用小写字母书写，属性字符串允许使用大小写。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* 推荐 *&#x2F;</span><br><span class="line">.jdc&#123;</span><br><span class="line">	display:block;</span><br><span class="line">&#125;</span><br><span class="line">	</span><br><span class="line">&#x2F;* 不推荐 *&#x2F;</span><br><span class="line">.JDC&#123;</span><br><span class="line">	DISPLAY:BLOCK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><ul>
<li>尽量少用通用选择器 <code>*</code></li>
<li>不使用 ID 选择器</li>
<li>不使用无具体语义定义的标签选择器</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-class">.jdc</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.jdc</span> <span class="selector-tag">li</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.jdc</span> <span class="selector-tag">li</span> <span class="selector-tag">p</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line">*&#123;&#125;</span><br><span class="line"><span class="selector-id">#jdc</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.jdc</span> <span class="selector-tag">div</span>&#123;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="代码缩进-1"><a href="#代码缩进-1" class="headerlink" title="代码缩进"></a>代码缩进</h3><p>统一使用四个空格进行代码缩进，使得各编辑器表现一致（各编辑器有相关配置）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 100%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h3><p>每个属性声明末尾都要加分号；</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 100%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="代码易读性"><a href="#代码易读性" class="headerlink" title="代码易读性"></a>代码易读性</h3><p>左括号与类名之间一个空格，冒号与属性值之间一个空格</p>
<p><em>推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.jdc &#123; </span><br><span class="line">    width: 100%; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><em>不推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.jdc&#123; </span><br><span class="line">    width:100%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>逗号分隔的取值，逗号之后一个空格</p>
<p><em>推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    box-shadow: 1px 1px 1px #333, 2px 2px 2px #ccc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><em>不推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    box-shadow: 1px 1px 1px #333,2px 2px 2px #ccc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>为单个css选择器或新申明开启新行</p>
<p><em>推荐：</em></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.jdc</span>, </span><br><span class="line"><span class="selector-class">.jdc_logo</span>, </span><br><span class="line"><span class="selector-class">.jdc_hd</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><em>不推荐：</em></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.jdc</span>,<span class="selector-tag">jdc_logo</span>,<span class="selector-class">.jdc_hd</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff0</span>;</span><br><span class="line">&#125;<span class="selector-class">.nav</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>颜色值 <code>rgb()</code> <code>rgba()</code> <code>hsl()</code> <code>hsla()</code> <code>rect()</code> 中不需有空格，且取值不要带有不必要的 0</p>
<p><em>推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    color: rgba(255,255,255,.5);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><em>不推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    color: rgba( 255, 255, 255, 0.5 );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>属性值十六进制数值能用简写的尽量用简写</p>
<p><em>推荐：</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.jdc &#123;</span><br><span class="line">    color: #fff;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><em>不推荐：</em></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.jdc</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>不要为 <code>0</code> 指明单位</p>
<p><em>推荐：</em></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.jdc</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><em>不推荐：</em></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.jdc</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="属性值引号"><a href="#属性值引号" class="headerlink" title="属性值引号"></a>属性值引号</h3><p>css属性值需要用到引号时，统一使用单引号</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-class">.jdc</span> &#123; </span><br><span class="line">	<span class="attribute">font-family</span>: <span class="string">'Hiragino Sans GB'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line"><span class="selector-class">.jdc</span> &#123; </span><br><span class="line">	<span class="attribute">font-family</span>: <span class="string">"Hiragino Sans GB"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="属性书写顺序"><a href="#属性书写顺序" class="headerlink" title="属性书写顺序"></a>属性书写顺序</h3><p>建议遵循以下顺序：</p>
<ol>
<li>布局定位属性：display / position / float / clear / visibility / overflow（建议 display 第一个写，毕竟关系到模式）</li>
<li>自身属性：width / height / margin / padding / border / background</li>
<li>文本属性：color / font / text-decoration / text-align / vertical-align / white- space / break-word</li>
<li>其他属性（CSS3）：content / cursor / border-radius / box-shadow / text-shadow / background:linear-gradient …</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.jdc</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: Arial, <span class="string">'Helvetica Neue'</span>, Helvetica, sans-serif;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">5</span>);</span><br><span class="line">    <span class="attribute">-webkit-border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">-moz-border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">-o-border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">-ms-border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://www.mozilla.org/css/base/content.css" target="_blank" rel="noopener">mozilla官方属性顺序推荐</a></p>
<h2 id="命名规范-1"><a href="#命名规范-1" class="headerlink" title="命名规范"></a>命名规范</h2><p>由历史原因及个人习惯引起的 DOM 结构、命名不统一，导致不同成员在维护同一页面时，效率低下，迭代、维护成本极高。</p>
<h3 id="目录命名"><a href="#目录命名" class="headerlink" title="目录命名"></a>目录命名</h3><ul>
<li>项目文件夹：shoping</li>
<li>样式文件夹：css</li>
<li>脚本文件夹：js</li>
<li>样式类图片文件夹：img</li>
<li>产品类图片文件夹： upload</li>
<li>字体类文件夹： fonts</li>
</ul>
<h3 id="ClassName命名"><a href="#ClassName命名" class="headerlink" title="ClassName命名"></a>ClassName命名</h3><p>ClassName的命名应该尽量精短、明确，必须以<strong>字母开头命名</strong>，且<strong>全部字母为小写</strong>，单词之间<strong>统一使用下划线</strong> “_” 连接</p>
<p>.nav_top</p>
<h4 id="常用命名推荐"><a href="#常用命名推荐" class="headerlink" title="常用命名推荐"></a>常用命名推荐</h4><p><strong>注意</strong>：ad、banner、gg、guanggao 等有机会和广告挂勾的不建议直接用来做ClassName，因为有些浏览器插件（Chrome的广告拦截插件等）会直接过滤这些类名，因此</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;ad&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<p>这种广告的英文或拼音类名不应该出现</p>
<p>另外，<strong>敏感不和谐字眼</strong>也不应该出现，如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;fuck&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;jer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;sm&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;gcd&quot;&gt;&lt;&#x2F;div&gt; </span><br><span class="line">&lt;div class&#x3D;&quot;ass&quot;&gt;&lt;&#x2F;div&gt; </span><br><span class="line">&lt;div class&#x3D;&quot;KMT&quot;&gt;&lt;&#x2F;div&gt; </span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>ClassName</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>about</td>
<td>关于</td>
</tr>
<tr>
<td>account</td>
<td>账户</td>
</tr>
<tr>
<td>arrow</td>
<td>箭头图标</td>
</tr>
<tr>
<td>article</td>
<td>文章</td>
</tr>
<tr>
<td>aside</td>
<td>边栏</td>
</tr>
<tr>
<td>audio</td>
<td>音频</td>
</tr>
<tr>
<td>avatar</td>
<td>头像</td>
</tr>
<tr>
<td>bg,background</td>
<td>背景</td>
</tr>
<tr>
<td>bar</td>
<td>栏（工具类）</td>
</tr>
<tr>
<td>branding</td>
<td>品牌化</td>
</tr>
<tr>
<td>crumb,breadcrumbs</td>
<td>面包屑</td>
</tr>
<tr>
<td>btn,button</td>
<td>按钮</td>
</tr>
<tr>
<td>caption</td>
<td>标题，说明</td>
</tr>
<tr>
<td>category</td>
<td>分类</td>
</tr>
<tr>
<td>chart</td>
<td>图表</td>
</tr>
<tr>
<td>clearfix</td>
<td>清除浮动</td>
</tr>
<tr>
<td>close</td>
<td>关闭</td>
</tr>
<tr>
<td>col,column</td>
<td>列</td>
</tr>
<tr>
<td>comment</td>
<td>评论</td>
</tr>
<tr>
<td>community</td>
<td>社区</td>
</tr>
<tr>
<td>container</td>
<td>容器</td>
</tr>
<tr>
<td>content</td>
<td>内容</td>
</tr>
<tr>
<td>copyright</td>
<td>版权</td>
</tr>
<tr>
<td>current</td>
<td>当前态，选中态</td>
</tr>
<tr>
<td>default</td>
<td>默认</td>
</tr>
<tr>
<td>description</td>
<td>描述</td>
</tr>
<tr>
<td>details</td>
<td>细节</td>
</tr>
<tr>
<td>disabled</td>
<td>不可用</td>
</tr>
<tr>
<td>entry</td>
<td>文章，博文</td>
</tr>
<tr>
<td>error</td>
<td>错误</td>
</tr>
<tr>
<td>even</td>
<td>偶数，常用于多行列表或表格中</td>
</tr>
<tr>
<td>fail</td>
<td>失败（提示）</td>
</tr>
<tr>
<td>feature</td>
<td>专题</td>
</tr>
<tr>
<td>fewer</td>
<td>收起</td>
</tr>
<tr>
<td>field</td>
<td>用于表单的输入区域</td>
</tr>
<tr>
<td>figure</td>
<td>图</td>
</tr>
<tr>
<td>filter</td>
<td>筛选</td>
</tr>
<tr>
<td>first</td>
<td>第一个，常用于列表中</td>
</tr>
<tr>
<td>footer</td>
<td>页脚</td>
</tr>
<tr>
<td>forum</td>
<td>论坛</td>
</tr>
<tr>
<td>gallery</td>
<td>画廊</td>
</tr>
<tr>
<td>group</td>
<td>模块，清除浮动</td>
</tr>
<tr>
<td>header</td>
<td>页头</td>
</tr>
<tr>
<td>help</td>
<td>帮助</td>
</tr>
<tr>
<td>hide</td>
<td>隐藏</td>
</tr>
<tr>
<td>hightlight</td>
<td>高亮</td>
</tr>
<tr>
<td>home</td>
<td>主页</td>
</tr>
<tr>
<td>icon</td>
<td>图标</td>
</tr>
<tr>
<td>info,information</td>
<td>信息</td>
</tr>
<tr>
<td>last</td>
<td>最后一个，常用于列表中</td>
</tr>
<tr>
<td>links</td>
<td>链接</td>
</tr>
<tr>
<td>login</td>
<td>登录</td>
</tr>
<tr>
<td>logout</td>
<td>退出</td>
</tr>
<tr>
<td>logo</td>
<td>标志</td>
</tr>
<tr>
<td>main</td>
<td>主体</td>
</tr>
<tr>
<td>menu</td>
<td>菜单</td>
</tr>
<tr>
<td>meta</td>
<td>作者、更新时间等信息栏，一般位于标题之下</td>
</tr>
<tr>
<td>module</td>
<td>模块</td>
</tr>
<tr>
<td>more</td>
<td>更多（展开）</td>
</tr>
<tr>
<td>msg,message</td>
<td>消息</td>
</tr>
<tr>
<td>nav,navigation</td>
<td>导航</td>
</tr>
<tr>
<td>next</td>
<td>下一页</td>
</tr>
<tr>
<td>nub</td>
<td>小块</td>
</tr>
<tr>
<td>odd</td>
<td>奇数，常用于多行列表或表格中</td>
</tr>
<tr>
<td>off</td>
<td>鼠标离开</td>
</tr>
<tr>
<td>on</td>
<td>鼠标移过</td>
</tr>
<tr>
<td>output</td>
<td>输出</td>
</tr>
<tr>
<td>pagination</td>
<td>分页</td>
</tr>
<tr>
<td>pop,popup</td>
<td>弹窗</td>
</tr>
<tr>
<td>preview</td>
<td>预览</td>
</tr>
<tr>
<td>previous</td>
<td>上一页</td>
</tr>
<tr>
<td>primary</td>
<td>主要</td>
</tr>
<tr>
<td>progress</td>
<td>进度条</td>
</tr>
<tr>
<td>promotion</td>
<td>促销</td>
</tr>
<tr>
<td>rcommd,recommendations</td>
<td>推荐</td>
</tr>
<tr>
<td>reg,register</td>
<td>注册</td>
</tr>
<tr>
<td>save</td>
<td>保存</td>
</tr>
<tr>
<td>search</td>
<td>搜索</td>
</tr>
<tr>
<td>secondary</td>
<td>次要</td>
</tr>
<tr>
<td>section</td>
<td>区块</td>
</tr>
<tr>
<td>selected</td>
<td>已选</td>
</tr>
<tr>
<td>share</td>
<td>分享</td>
</tr>
<tr>
<td>show</td>
<td>显示</td>
</tr>
<tr>
<td>sidebar</td>
<td>边栏，侧栏</td>
</tr>
<tr>
<td>slide</td>
<td>幻灯片，图片切换</td>
</tr>
<tr>
<td>sort</td>
<td>排序</td>
</tr>
<tr>
<td>sub</td>
<td>次级的，子级的</td>
</tr>
<tr>
<td>submit</td>
<td>提交</td>
</tr>
<tr>
<td>subscribe</td>
<td>订阅</td>
</tr>
<tr>
<td>subtitle</td>
<td>副标题</td>
</tr>
<tr>
<td>success</td>
<td>成功（提示）</td>
</tr>
<tr>
<td>summary</td>
<td>摘要</td>
</tr>
<tr>
<td>tab</td>
<td>标签页</td>
</tr>
<tr>
<td>table</td>
<td>表格</td>
</tr>
<tr>
<td>txt,text</td>
<td>文本</td>
</tr>
<tr>
<td>thumbnail</td>
<td>缩略图</td>
</tr>
<tr>
<td>time</td>
<td>时间</td>
</tr>
<tr>
<td>tips</td>
<td>提示</td>
</tr>
<tr>
<td>title</td>
<td>标题</td>
</tr>
<tr>
<td>video</td>
<td>视频</td>
</tr>
<tr>
<td>wrap</td>
<td>容器，包，一般用于最外层</td>
</tr>
<tr>
<td>wrapper</td>
<td>容器，包，一般用于最外层</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>以前学习的东西/模板</title>
    <url>/2020/11/05/%E4%BB%A5%E5%89%8D%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%9C%E8%A5%BF/%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>前端学习代码/Vue/Vue</title>
    <url>/2020/10/26/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%BB%A3%E7%A0%81/Vue/Vue/</url>
    <content><![CDATA[<h1 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h1><h2 id="vue-cli-的创建"><a href="#vue-cli-的创建" class="headerlink" title="vue cli 的创建"></a>vue cli 的创建</h2><p><code>vue create name</code></p>
<h2 id="vue-cli-运行"><a href="#vue-cli-运行" class="headerlink" title="vue cli 运行"></a>vue cli 运行</h2><p><code>npm run serve</code></p>
<h2 id="vue-router"><a href="#vue-router" class="headerlink" title="vue-router"></a>vue-router</h2><h3 id="router的初体验"><a href="#router的初体验" class="headerlink" title="router的初体验"></a>router的初体验</h3><p>1.首先先创建一个新的vue文件，配置文件内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h1&gt;首页&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;Main&#39;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>



<p>2.再到router文件的index.js中，导入新写的vue文件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> Content <span class="keyword">from</span> <span class="string">'../components/Content.vue'</span></span><br><span class="line"><span class="keyword">import</span> Main <span class="keyword">from</span> <span class="string">'../components/Main.vue'</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// 路由路径</span></span><br><span class="line">    path: <span class="string">'/content'</span>,</span><br><span class="line">    name: <span class="string">'content'</span>,</span><br><span class="line">    <span class="comment">// 跳转的组件</span></span><br><span class="line">    component: Content</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/main'</span>,</span><br><span class="line">    name: <span class="string">'contenr'</span>,</span><br><span class="line">    component: Main</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>需要import文件位置</p>
<p>3最后在App.vue中引入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;h1&gt;啊这&lt;&#x2F;h1&gt;</span><br><span class="line">      &#x2F;&#x2F;类似于&lt;a&gt;&lt;&#x2F;a&gt;标签的引入</span><br><span class="line">    &lt;router-link to&#x3D;&quot;&#x2F;main&quot;&gt;首页&lt;&#x2F;router-link&gt;</span><br><span class="line">    &lt;router-link to&#x3D;&quot;&#x2F;content&quot;&gt;内容页&lt;&#x2F;router-link&gt;</span><br><span class="line">      &#x2F;&#x2F;显示视图</span><br><span class="line">    &lt;router-view&gt;&lt;&#x2F;router-view&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br></pre></td></tr></table></figure>

<p>​    </p>
]]></content>
  </entry>
  <entry>
    <title>抗疫日记3</title>
    <url>/2020/03/19/%E4%BB%A5%E5%89%8D%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%9C%E8%A5%BF/%E6%8A%97%E7%96%AB%E6%97%A5%E8%AE%B03/</url>
    <content><![CDATA[<p>ps:这次真是我自己想写的</p>
 <a id="more"></a>

<!-- more --> 

<p>​    今天真的是抗疫期间最气的一次了，身为湖北人回株洲，理应居家隔离，我认同这件事，毕竟现在这个期间谁不怕湖北人呢？</p>
<p>​    </p>
<p><img src="https://raw.githubusercontent.com/Ssinoo/Blogimg/master/picgo/20200319212851.jpg" alt=""></p>
<p><img src="https://raw.githubusercontent.com/Ssinoo/Blogimg/master/picgo/20200319212923.jpg" alt=""></p>
<p>​    Today </p>
<p>​    叫我们居家隔离，才1天就叫我们出门去核酸检测，检测就算了，因为没有健康证明所以不能让们检测，提供了湖北打卡了绿码不认？？？ 这不是矛盾嘛？？？？ </p>
<p>​    这nmb 核酸检测不就是告诉你健不健康的,有健康证明再检测 我吐了,叫我们居家隔离，又叫我们出去 聚集 检测（是不是想让一些没得病去哪里得病？），然后又要我们去打印店搞健康证明，这不就增加了接触嘛。这一手操作看的我脑壳晕。</p>
<p>​    今年鼠年，在湖北发生了这样的事情，恰巧我也是湖北人，鼠年真的成为了一只过街老鼠，虽然要给武汉加油，给湖北加油，湖北除武汉下面的地级市真的很惨，工作做不了，家里也无经济来源，回到了株洲又是一些稀奇古怪的政策，我们尊重和服从政策但是也不要搞一些迷惑行为的政策吧。</p>
<p>​    3月19了，寒假还没有结束，甚至全国的学生，高三的学生也依然处于寒假中。学校提供了500的救助金给湖北学生，但是别人的学校给了1千（hhh，不能道德绑架嗷，只是柠檬下）。</p>
<p>​    现在每天的工作日是要进行网课学习的，有的老师确实可以，直播讲课，但是也有直接扔一堆课件也看内容和质量让我们无脑的学习，真的没点意义和作用，无意义的打卡和学习，但是可能是我太菜了吧，没好好学习还好意思说，在没进行学校网课的时候，我也一直在网上是学习的，<strong>u1s1，我在哔站上大学</strong>,课程质量和内容方面真的很不错。不能要求学校符合自己，自己适应学校吧。</p>
<p>​    但是今天真的令人生气，害，疫情快点结束吧，快被烦死了。总是有一堆迷惑的政策和行为，说来也惭愧，在学校开始进行网课，就不想学习了，一种任务式的完成，被捆绑和约束的学习真的很不舒服，之前还天天进行了学习，不学习对不起自己这样惭愧感，现在只有一种机械式的服从命令，压抑和烦躁<em>而且网课的质量也差，也是随便应付我们的</em>。</p>
<p>​    4月份不知道，有没有可能开学，估计行叭？</p>
<p>​    真心要吐槽，吐了，吐了。</p>
<p>​    疫情快过去吧，湖北也能好起来，家里的经济也能恢复。</p>
<p>​    <strong>Peace</strong></p>
]]></content>
      <categories>
        <category>daily</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>抗疫日记2</title>
    <url>/2020/03/11/%E4%BB%A5%E5%89%8D%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%9C%E8%A5%BF/%E6%8A%97%E7%96%AB%E6%97%A5%E8%AE%B02/</url>
    <content><![CDATA[<h1 id="《给学校的一封回信》"><a href="#《给学校的一封回信》" class="headerlink" title="《给学校的一封回信》"></a>《给学校的一封回信》</h1><p>ps:不会真以为我自己会写这些东西吧，学校要求的。。</p>
 <a id="more"></a>

<!-- more --> 



<p>尊敬的学校：</p>
<p>​     今年的春节比较早，而且老家在湖北孝感，所以早早的回了老家，本以为是普普通通的一次寒假，没想到湖北武汉爆发了新型管状病毒，刚开始我还是不以为然，以为就是一场较为严重的传染病而已，虽然我这儿离武汉也很近。</p>
<p>刚开始爆发的前几天，也不过几百人，真正开始意识到严重的是，突然宣布湖北要封省，我开始频繁的关注人民日报在微博的消息，人数也开始暴涨，一天以千为单位上涨，湖北武汉成了重灾地，湖北的地级市也开始增长，我开始提心吊胆，时不时摸摸自己的额头，看看有没有发热的征兆，还好，一切良好。</p>
<p>学校也开始关心学生，开始收集每一个学生的所在地和健康情况，让我们每天在《今日校园》进行每日的打卡，这不仅关心到每一个学生，也是关心整个学校的情况，让我们不会因为个人特殊状况影响学校的运行状况。准确的报告自身的身体状况，不仅仅是涉及学校也是涉及到社会的健康问题。</p>
<p>学校贯彻停课不停学的要求，提出了“听课不停学，课时不能少，质量要确保”的要求，在2月24号在学习通，和中国MOOC开启了线上教学，让我们充分的利用最长的一次寒假假期，学校的“互联网+”优势，可以让我们拥有前瞻性的学习方式发挥在网络学习这一新型的学习方式，让我们静下心学习，利用网络的信息如：中国知网获取论文知识，和各种渠道了解自己本专业的最新动态和知识。</p>
<p>感谢学校对学生的关心，保持了信息的畅通，获取密切沟通，心里辅导，要我们感受到了学校和老师对我们强烈的关心和理解，感受到了学校的温暖，如一个家一样，老师如我们亲人一般。</p>
<p>全世界为这疫情而奋斗，我们作为普通社会的一员，首要要保护我们自己，在理解国家为这次疫情所做出的一切，和学校为保护我们每一个学生所作出的努力，在家并不是什么都不能做，为国家也能做出一份我们力所能及的贡献，并且在家提升自己的学习能力，有学校给我们提供的丰富的学习资源，利用好学习资源，在“停课不停学”的阶段，掌握好知识的汲取和积累。不能因为疫情而获得的长寒假而荒废自己的学业，打好每一次的卡，及时签到，完成网课的学习，和布置的作业。</p>
<p>身为湖北人，武汉最美的不是樱花，是武汉人感恩的心，更是湖北所有在努力为预防疫情的心，期待疫情结束摘下口罩后，看到大家樱花一样的笑脸！现在事情都是向善的，出院人数已经实现了反超，至今每天还是去看疫情的报道，我这确诊虽然还是处于全国第二，但是增加的人数越来越少，希望疫情赶紧过去吧，待到春暖花开，我们相聚一堂，繁花与共。</p>
<p>此致！                                                                                                                                                                                               18软工五班</p>
<p>​                                                                           Ssinoo</p>
]]></content>
      <categories>
        <category>daily</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript笔记</title>
    <url>/2020/03/04/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%BB%A3%E7%A0%81/JavaScript/JavaScript/</url>
    <content><![CDATA[<h1 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"20190325.jpg"</span> <span class="attr">id</span> = <span class="string">"sakura"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> sakura = <span class="built_in">document</span>.getElementById(<span class="string">"sakura"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> flag = <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">    sakura.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">        if(flag)&#123;</span><br><span class="line"><span class="actionscript">            sakura.src=<span class="string">"1542983908(1).jpg"</span>;</span></span><br><span class="line"><span class="actionscript">            flag= <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            sakura.src=<span class="string">"20190325.jpg"</span>;</span></span><br><span class="line"><span class="actionscript">            flag=<span class="literal">true</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h1><h2 id="window对象"><a href="#window对象" class="headerlink" title="window对象"></a>window对象</h2><h2 id="轮播图"><a href="#轮播图" class="headerlink" title="轮播图"></a>轮播图</h2><p>setInterval 重复执行</p>
<p>setTimeout 执行一次</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>轮播图<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img1.jpg"</span> <span class="attr">id</span> = <span class="string">"img"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"200px"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> img = <span class="built_in">document</span>.getElementById(<span class="string">"img"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> num = <span class="number">1</span> ;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">fun</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">        num++</span><br><span class="line">        if (num&gt;3)&#123;</span><br><span class="line">            num =1;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        img.src=<span class="string">"img"</span>+num+<span class="string">".jpg"</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    setInterval(fun,1000);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Location</p>
<h2 id="实现点击后几秒-再跳转其他页面"><a href="#实现点击后几秒-再跳转其他页面" class="headerlink" title="实现点击后几秒 再跳转其他页面"></a>实现点击后几秒 再跳转其他页面</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">id</span>=<span class="string">"href"</span>&gt;</span>baidu<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span> =<span class="string">time</span> &gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> href = <span class="built_in">document</span>.getElementById(<span class="string">"href"</span>);</span></span><br><span class="line"><span class="actionscript">    href.onclick=<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">        setInterval(showtime,1000);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> second = <span class="number">5</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">showtime</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">        second -- ;</span><br><span class="line">        if(second==0)&#123;</span><br><span class="line"><span class="actionscript">            location.href=<span class="string">"https://www.baidu.com/"</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> time = <span class="built_in">document</span>.getElementById(<span class="string">"time"</span>);</span></span><br><span class="line"><span class="actionscript">        time.innerHTML = second+<span class="string">"秒后，自动跳转。。。。"</span>;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="let-var"><a href="#let-var" class="headerlink" title="let/var"></a>let/var</h2><p>let 在if/for内定义，在外面就访问不到 </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span> ;i&lt;<span class="number">5</span> ;i++)&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(i);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">console</span>.log(i);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">let</span> j =<span class="number">0</span>; j&lt;<span class="number">5</span>;j++)&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(j);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">console</span>.log(j)</span><br><span class="line"> &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/Ssinoo/Blogimg/master/picgo/image-20201121162018651.png" alt="image-20201121162018651"></p>
<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//箭头函数</span></span><br><span class="line">    <span class="keyword">var</span> greeting = <span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"hello"</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    greeting();</span><br><span class="line">    <span class="comment">//一个参数 括号可以去掉</span></span><br><span class="line">    <span class="keyword">var</span> greeting2 = <span class="function"><span class="params">name</span> =&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(name+<span class="string">" say hello"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    greeting2(<span class="string">"ssinoo"</span>);</span><br><span class="line">    <span class="comment">// 多个参数</span></span><br><span class="line">    <span class="keyword">var</span> greeting3 = <span class="function">(<span class="params">name,age</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(name+<span class="string">"is"</span>+age);</span><br><span class="line">    &#125;</span><br><span class="line">    greeting3(<span class="string">"ssinoo"</span>,<span class="string">"20"</span>)</span><br><span class="line">    <span class="comment">// 有返回值 传x 返回 x+1</span></span><br><span class="line">    <span class="keyword">var</span> increment = <span class="function"><span class="params">x</span>=&gt;</span>x+<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(increment(<span class="number">6</span>));</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/Ssinoo/Blogimg/master/picgo/image-20201121163020948.png" alt="image-20201121163020948"></p>
<h3 id="自执行函数"><a href="#自执行函数" class="headerlink" title="自执行函数"></a>自执行函数</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="keyword">var</span> num1 =<span class="number">10</span>;</span><br><span class="line">   <span class="comment">//自执行函数</span></span><br><span class="line">   (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="keyword">var</span> num1 = <span class="number">20</span>;</span><br><span class="line">     <span class="built_in">console</span>.log(num1);</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="comment">//调用方法</span></span><br><span class="line">   ();</span><br><span class="line">   <span class="built_in">console</span>.log(num1);</span><br><span class="line"> &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/Ssinoo/Blogimg/master/picgo/image-20201121164224180.png" alt="image-20201121164224180"></p>
<h3 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//回调函数</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params">cb</span>)</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"请求数据"</span>);</span><br><span class="line">      cb(<span class="string">"success"</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"请求结果"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    request(<span class="function"><span class="params">result</span> =&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"执行回调"</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"执行结果为:"</span>+result);</span><br><span class="line">    &#125;)</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/Ssinoo/Blogimg/master/picgo/image-20201121164902481.png" alt="image-20201121164902481"></p>
<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="删除数组-spice"><a href="#删除数组-spice" class="headerlink" title="删除数组 spice"></a>删除数组 spice</h2><p>spice() : 删除数组中元素 （索引位置，删除数量，添加的数组 ）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> arr =[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line">    <span class="comment">//索引，几个 从索引为2开始 删除1个。</span></span><br><span class="line">    arr.splice(<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(arr); <span class="comment">//[1, 2, 4]</span></span><br><span class="line">    <span class="comment">//删除为索引2开始,1个。并添加了[7,8,9]</span></span><br><span class="line">    arr.splice(<span class="number">2</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(arr);</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/Ssinoo/Blogimg/master/picgo/image-20201121170615842.png" alt="image-20201121170615842"></p>
<h2 id="栈模式-push-pop"><a href="#栈模式-push-pop" class="headerlink" title="栈模式 push pop"></a>栈模式 push pop</h2><p>栈：先进后出</p>
<p>push 在数组后面添加元素</p>
<p>pop 删除数组最后面的元素</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="keyword">var</span> stack =[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">   stack.push(<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>);</span><br><span class="line">   <span class="built_in">console</span>.log(stack);</span><br><span class="line">   <span class="comment">//删除最后一个元素</span></span><br><span class="line">   <span class="keyword">var</span> last =stack.pop();</span><br><span class="line">   <span class="built_in">console</span>.log(stack);</span><br><span class="line"> &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/Ssinoo/Blogimg/master/picgo/image-20201121171417685.png" alt="image-20201121171417685"></p>
<h2 id="队列模式-shift-unshift"><a href="#队列模式-shift-unshift" class="headerlink" title="队列模式 shift unshift"></a>队列模式 shift unshift</h2><p>队列：先进先出</p>
<p>shift: 删除数组第一个元素</p>
<p>unshift:在数组最前面添加元素</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> queue =[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">    queue.push(<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(queue)</span><br><span class="line">    <span class="comment">// 删除第一个</span></span><br><span class="line">    queue.shift();</span><br><span class="line">    <span class="built_in">console</span>.log(queue);</span><br><span class="line">    <span class="comment">//在数组前添加</span></span><br><span class="line">    queue.unshift(<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(queue);</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/Ssinoo/Blogimg/master/picgo/image-20201121172010095.png" alt="image-20201121172010095"></p>
<h2 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> arr =[<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>];</span><br><span class="line">    <span class="comment">//升序</span></span><br><span class="line">    arr.sort()</span><br><span class="line">    <span class="built_in">console</span>.log(arr);</span><br><span class="line">    <span class="comment">//实现降序</span></span><br><span class="line">    <span class="comment">// arr.sort((a,b)=&gt;&#123;</span></span><br><span class="line">    <span class="comment">//   if(a&gt;b)&#123;</span></span><br><span class="line">    <span class="comment">//     return -1</span></span><br><span class="line">    <span class="comment">//   &#125;else if(a&lt;b)&#123;</span></span><br><span class="line">    <span class="comment">//     return 1</span></span><br><span class="line">    <span class="comment">//   &#125;else&#123;</span></span><br><span class="line">    <span class="comment">//     return 0</span></span><br><span class="line">    <span class="comment">//   &#125;</span></span><br><span class="line">    <span class="comment">// &#125;)</span></span><br><span class="line">    arr.sort(<span class="function">(<span class="params">a,b</span>)=&gt;</span>b-a)</span><br><span class="line">    <span class="built_in">console</span>.log(arr);</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/Ssinoo/Blogimg/master/picgo/image-20201121173730659.png" alt="image-20201121173730659"></p>
<h2 id="数组连接-concat"><a href="#数组连接-concat" class="headerlink" title="数组连接 concat"></a>数组连接 concat</h2><p>concat()</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1 =[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">   <span class="keyword">var</span> arr2 =[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line">   arr1.concat(arr2)</span><br></pre></td></tr></table></figure>

<h2 id="数组裁切-slice"><a href="#数组裁切-slice" class="headerlink" title="数组裁切 slice"></a>数组裁切 slice</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> arr =[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line">    <span class="comment">//包头不包尾 从索引1开始，-2(倒数第2个)</span></span><br><span class="line">    <span class="built_in">console</span>.log(arr.slice(<span class="number">1</span>,<span class="number">-2</span>));</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/Ssinoo/Blogimg/master/picgo/image-20201121174332987.png" alt="image-20201121174332987"></p>
<h2 id="reduce函数"><a href="#reduce函数" class="headerlink" title="reduce函数"></a>reduce函数</h2><p>reduce 有4个返回值： </p>
<ol>
<li>上一次计算的结果</li>
<li>当前遍历到的数组元素</li>
<li>当期遍历到的索引</li>
<li>数组本身</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="keyword">var</span> arr =[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line">   </span><br><span class="line">     arr.reduce(<span class="function">(<span class="params">per,curv,curi,arr</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(per);</span><br><span class="line">      <span class="built_in">console</span>.log(curv); </span><br><span class="line">      <span class="built_in">console</span>.log(curi); </span><br><span class="line">      <span class="built_in">console</span>.log(arr); </span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"-----"</span>);</span><br><span class="line">     &#125;)</span><br><span class="line">     <span class="built_in">console</span>.log(arr.reduce(<span class="function">(<span class="params">f,s</span>)=&gt;</span>f+s,<span class="number">5</span>));</span><br><span class="line"> &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/Ssinoo/Blogimg/master/picgo/image-20201121180945778.png" alt="image-20201121180945778"></p>
<h1 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h1>]]></content>
      <categories>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>html笔记</title>
    <url>/2020/03/04/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%BB%A3%E7%A0%81/HTML/html%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="css"><a href="#css" class="headerlink" title="css"></a>css</h1><h2 id="css样式"><a href="#css样式" class="headerlink" title="css样式"></a>css样式</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_background.asp" target="_blank" rel="noopener">background</a></td>
<td align="left">简写属性，作用是将背景属性设置在一个声明中。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_background-attachment.asp" target="_blank" rel="noopener">background-attachment</a></td>
<td align="left">背景图像是否固定或者随着页面的其余部分滚动。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_background-color.asp" target="_blank" rel="noopener">background-color</a></td>
<td align="left">设置元素的背景颜色。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_background-image.asp" target="_blank" rel="noopener">background-image</a></td>
<td align="left">把图像设置为背景。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_background-position.asp" target="_blank" rel="noopener">background-position</a></td>
<td align="left">设置背景图像的起始位置。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_background-repeat.asp" target="_blank" rel="noopener">background-repeat</a></td>
<td align="left">设置背景图像是否及如何重复。</td>
</tr>
</tbody></table>
<a id="more"></a>

 <!-- more -->

<h3 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h3><table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_text_color.asp" target="_blank" rel="noopener">color</a></td>
<td align="left">设置文本颜色</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_text_direction.asp" target="_blank" rel="noopener">direction</a></td>
<td align="left">设置文本方向。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_dim_line-height.asp" target="_blank" rel="noopener">line-height</a></td>
<td align="left">设置行高。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_text_letter-spacing.asp" target="_blank" rel="noopener">letter-spacing</a></td>
<td align="left">设置字符间距。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_text_text-align.asp" target="_blank" rel="noopener">text-align</a></td>
<td align="left">对齐元素中的文本。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_text_text-decoration.asp" target="_blank" rel="noopener">text-decoration</a></td>
<td align="left">向文本添加修饰。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_text_text-indent.asp" target="_blank" rel="noopener">text-indent</a></td>
<td align="left">缩进元素中文本的首行。</td>
</tr>
<tr>
<td align="left">text-shadow</td>
<td align="left">设置文本阴影。CSS2 包含该属性，但是 CSS2.1 没有保留该属性。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_text_text-transform.asp" target="_blank" rel="noopener">text-transform</a></td>
<td align="left">控制元素中的字母。</td>
</tr>
<tr>
<td align="left">unicode-bidi</td>
<td align="left">设置文本方向。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_text_white-space.asp" target="_blank" rel="noopener">white-space</a></td>
<td align="left">设置元素中空白的处理方式。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_text_word-spacing.asp" target="_blank" rel="noopener">word-spacing</a></td>
<td align="left">设置字间距。</td>
</tr>
</tbody></table>
<h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_font_font.asp" target="_blank" rel="noopener">font</a></td>
<td align="left">简写属性。作用是把所有针对字体的属性设置在一个声明中。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_font_font-family.asp" target="_blank" rel="noopener">font-family</a></td>
<td align="left">设置字体系列。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_font_font-size.asp" target="_blank" rel="noopener">font-size</a></td>
<td align="left">设置字体的尺寸。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_font_font-size-adjust.asp" target="_blank" rel="noopener">font-size-adjust</a></td>
<td align="left">当首选字体不可用时，对替换字体进行智能缩放。（CSS2.1 已删除该属性。）</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_font_font-stretch.asp" target="_blank" rel="noopener">font-stretch</a></td>
<td align="left">对字体进行水平拉伸。（CSS2.1 已删除该属性。）</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_font_font-style.asp" target="_blank" rel="noopener">font-style</a></td>
<td align="left">设置字体风格。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_font_font-variant.asp" target="_blank" rel="noopener">font-variant</a></td>
<td align="left">以小型大写字体或者正常字体显示文本。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_font_weight.asp" target="_blank" rel="noopener">font-weight</a></td>
<td align="left">设置字体的粗细。</td>
</tr>
</tbody></table>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>链接的四种状态：</p>
<ul>
<li>a:link - 普通的、未被访问的链接</li>
<li>a:visited - 用户已访问的链接</li>
<li>a:hover - 鼠标指针位于链接的上方</li>
<li>a:active - 链接被点击的时刻</li>
</ul>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_list-style.asp" target="_blank" rel="noopener">list-style</a></td>
<td align="left">简写属性。用于把所有用于列表的属性设置于一个声明中。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_list-style-image.asp" target="_blank" rel="noopener">list-style-image</a></td>
<td align="left">将图象设置为列表项标志。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_list-style-position.asp" target="_blank" rel="noopener">list-style-position</a></td>
<td align="left">设置列表中列表项标志的位置。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_list-style-type.asp" target="_blank" rel="noopener">list-style-type</a></td>
<td align="left">设置列表项标志的类型。</td>
</tr>
</tbody></table>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_tab_border-collapse.asp" target="_blank" rel="noopener">border-collapse</a></td>
<td align="left">设置是否把表格边框合并为单一的边框。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_tab_border-spacing.asp" target="_blank" rel="noopener">border-spacing</a></td>
<td align="left">设置分隔单元格边框的距离。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_tab_caption-side.asp" target="_blank" rel="noopener">caption-side</a></td>
<td align="left">设置表格标题的位置。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_tab_empty-cells.asp" target="_blank" rel="noopener">empty-cells</a></td>
<td align="left">设置是否显示表格中的空单元格。</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_tab_table-layout.asp" target="_blank" rel="noopener">table-layout</a></td>
<td align="left">设置显示单元、行和列的算法。</td>
</tr>
</tbody></table>
<h3 id="轮廓"><a href="#轮廓" class="headerlink" title="轮廓"></a>轮廓</h3><table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">描述</th>
<th align="left">CSS</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_outline.asp" target="_blank" rel="noopener">outline</a></td>
<td align="left">在一个声明中设置所有的轮廓属性。</td>
<td align="left">2</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_outline-color.asp" target="_blank" rel="noopener">outline-color</a></td>
<td align="left">设置轮廓的颜色。</td>
<td align="left">2</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_outline-style.asp" target="_blank" rel="noopener">outline-style</a></td>
<td align="left">设置轮廓的样式。</td>
<td align="left">2</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/pr_outline-width.asp" target="_blank" rel="noopener">outline-width</a></td>
<td align="left">设置轮廓的宽度。</td>
<td align="left">2</td>
</tr>
</tbody></table>
<h3 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h3><h4 id="padding-内边距"><a href="#padding-内边距" class="headerlink" title="padding: 内边距"></a>padding: 内边距</h4><h4 id="margin-：外边距"><a href="#margin-：外边距" class="headerlink" title="margin ：外边距"></a>margin ：外边距</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="注册页面案例"><a href="#注册页面案例" class="headerlink" title="注册页面案例"></a>注册页面案例</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>register<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        body&#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-tag">url</span>("20190325<span class="selector-class">.jpg</span>");</span></span><br><span class="line">            margin-top: 100px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.regi</span>&#123;</span></span><br><span class="line">            width: 900px;</span><br><span class="line">            height: 500px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 5<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#EEEEEE</span>;</span></span><br><span class="line">            background-color: white;</span><br><span class="line">            margin: auto;</span><br><span class="line">            padding: 15px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.regi-left</span>&#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.regi-center</span>&#123;</span></span><br><span class="line">            padding-top: 20px;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.regi-right</span>&#123;</span></span><br><span class="line">            float: right;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.td_left</span>&#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            text-align: right;</span><br><span class="line">            height: 45px;</span><br><span class="line">            padding-left: 150px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.td_right</span>&#123;</span></span><br><span class="line">            padding-left: 30px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#username</span>,<span class="selector-id">#password</span>&#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 30px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#A6A6A6</span>;</span></span><br><span class="line">            border-radius: 5px;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#btn_sub</span>&#123;</span></span><br><span class="line">            height: 50px;</span><br><span class="line">            width: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#ff7a89</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ff7a89</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#td_btn</span>&#123;</span></span><br><span class="line">            padding-left: 150px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"regi"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"regi-left"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>新用户注册<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"regi-center"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table"</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"td_left"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"username"</span>&gt;</span>姓名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"td_right"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span> =<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">placeholder</span> =<span class="string">"请输入名字"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"td_left"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"password"</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"td_right"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span> =<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">id</span>=<span class="string">"td_btn"</span> &gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">id</span>=<span class="string">"btn_sub"</span> <span class="attr">value</span>=<span class="string">"确定"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"regi-right"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>已有账号?<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>立即登入<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="C:%5CUsers%5C44910%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200304113343250.png" alt="image-20200304113343250"></p>
<h2 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h2><h3 id="第一默认模板"><a href="#第一默认模板" class="headerlink" title="第一默认模板"></a>第一默认模板</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>hw2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>JDBC</title>
    <url>/2020/03/02/%E4%BB%A5%E5%89%8D%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%9C%E8%A5%BF/JDBC/</url>
    <content><![CDATA[<h2 id="jdbc快速入门"><a href="#jdbc快速入门" class="headerlink" title="jdbc快速入门"></a>jdbc快速入门</h2><p>步骤：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">jdbc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//2，注册驱动包</span></span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        <span class="comment">//3.获取数据库连接</span></span><br><span class="line">        Connection conn  = DriverManager.getConnection  (<span class="string">"jdbc:mysql://localhost:3306/noo"</span>,<span class="string">"root"</span>,<span class="string">"000916noo"</span>);</span><br><span class="line">        <span class="comment">//4.定义sql语句</span></span><br><span class="line">        String sql =<span class="string">"insert into task1 values ('01' , '德玛西亚' , '男' , '99');"</span>;</span><br><span class="line">        <span class="comment">//5.获取执行sql的对象 Statement</span></span><br><span class="line">        Statement sta = conn.createStatement();</span><br><span class="line">        <span class="comment">//6.执行sql</span></span><br><span class="line">        <span class="keyword">int</span> count = sta.executeUpdate(sql);</span><br><span class="line">        <span class="comment">//7.处理结果</span></span><br><span class="line">        System.out.println(count);</span><br><span class="line">        <span class="comment">//8.释放资源</span></span><br><span class="line">        sta.close();</span><br><span class="line">        conn.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

 <a id="more"></a>

 <!-- more -->

<h3 id="抽取JDBC工具类-JDBCUtils"><a href="#抽取JDBC工具类-JDBCUtils" class="headerlink" title="抽取JDBC工具类 JDBCUtils"></a>抽取JDBC工具类 JDBCUtils</h3><p>properties</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>JDBC</tag>
      </tags>
  </entry>
  <entry>
    <title>抗疫日记</title>
    <url>/2020/03/01/%E4%BB%A5%E5%89%8D%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%9C%E8%A5%BF/%E6%8A%97%E7%96%AB%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="《抗疫日记》"><a href="#《抗疫日记》" class="headerlink" title="《抗疫日记》"></a>《抗疫日记》</h1><p>  小学生作文，文笔也太差了</p>
 <a id="more"></a>

<!-- more --> 



<p>  2020，听起来很好听的年份，一个拥有重要事件的年份，要实现全面小康的一年。生肖年新的一轮的开端。 </p>
<p>  1月初放假了，在家没呆几天就回湖北老家了，本来开开心心买了一堆年货，可以陪爷爷奶奶和很久不见的堂兄弟们，回老家的第二天，湖北爆发了新型冠状病毒，刚开始不以为然，偶尔还去小卖部买几瓶喝的，去快递点拿快递，想着就这种小病怎么可能会传染到我。</p>
<p>事情的发展总是会出乎意料，我所处的湖北孝感，瞬间成为除武汉以外确诊人数最多的地方，一个市超过了所有外省，刚开始每天提心吊胆，时不时摸自己的额头看看有没有变热，喉咙时不时干咳一下，确认有没有咳嗽，每天不停的刷着微博的疫情状况，希望有什么特效药的出现，但是特效药的出现几乎不可能在短时间研发成功的，唯一能做到的是靠自身的免疫力和外界药物的抑制。每天的内容都会有很多变化，从开始的几百几百例的增加到突然一天增加的近3万人一天，除了震惊还有害怕，毕竟我就处于湖北。</p>
<p>  从这一次的疫情看出来管理层的腐败，身为湖北人对湖北产生了厌恶，各种对疫情的隐瞒，各种决策的失误，李文亮医生说真话被当谣言，连逝世的那段时间都显的那么不真实，老鼠屎总归还是会被铲除的，虽然也不知道老鼠屎被铲干净了没有，但是现在事情都是向善的，出院人数已经实现了反超，至今每天还是去看疫情的报道，我这确诊虽然还是处于全国第二，但是增加的人数越来越少，希望疫情赶紧过去吧，待到春暖花开，我们相聚一堂，繁花与共。</p>
]]></content>
      <categories>
        <category>daily</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>Request笔记</title>
    <url>/2020/02/17/%E4%BB%A5%E5%89%8D%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%9C%E8%A5%BF/Request/</url>
    <content><![CDATA[<h2 id="Http"><a href="#Http" class="headerlink" title="Http:"></a>Http:</h2><p>基于TCP/IP的高级协议</p>
<h3 id="请求消息数据格式"><a href="#请求消息数据格式" class="headerlink" title="请求消息数据格式"></a>请求消息数据格式</h3><p>1.请求行</p>
<p>​    请求方式 请求url 请求协议/版本</p>
<p>​    GET/login.html HTTP/1.1</p>
<p>​    *请求方式</p>
<p>​            GET:请求参数在url中，不安全</p>
<p>​            POST：请求参数在请求体中</p>
<p>2.请求头</p>
<p>​    请求头名称： 请求头值</p>
<p>​        请求头：</p>
<p>​            1.User-Agent：获取服务器端，解决浏览器的兼容性</p>
<p>3.请求空行</p>
<p>​    空行</p>
<h2 id="request"><a href="#request" class="headerlink" title="request"></a>request</h2><p>request和response对象是由服务器创建的</p>
<p>request对象是来获取请求消息</p>
<p>response对象是来设置响应消息</p>
<h3 id="request功能"><a href="#request功能" class="headerlink" title="request功能"></a>request功能</h3><ol>
<li><p>获取请求消息数据</p>
<ol>
<li><p>获取请求行数据</p>
<ol>
<li>方法</li>
</ol>
</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>Http</tag>
        <tag>Request</tag>
      </tags>
  </entry>
  <entry>
    <title>Servlet笔记</title>
    <url>/2020/02/17/%E4%BB%A5%E5%89%8D%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%9C%E8%A5%BF/Servlet/</url>
    <content><![CDATA[<h1 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h1><h2 id="概念：server-applet-客户端的小程序"><a href="#概念：server-applet-客户端的小程序" class="headerlink" title="概念：server applet 客户端的小程序"></a>概念：server applet 客户端的小程序</h2><ul>
<li><p>Servlet就是一个接口，定义Java类被浏览器访问到（tomcat识别）</p>
</li>
<li><p>定义一个类，实现Servlet接口，复写方法。</p>
</li>
<li><p>快速入门</p>
<ul>
<li><p>1.创建javaEE项目</p>
</li>
<li><p>2.定义一个类，实现Servlet接口</p>
</li>
<li><p>3.复写接口中的方法</p>
 <a id="more"></a>

 <!-- more -->

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">	<span class="comment">//初始化方法，Servlet被创建时执行一次</span></span><br><span class="line"><span class="number">1</span>.<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException</span></span><br><span class="line"><span class="function">	<span class="comment">//获取 ServletConfig对象</span></span></span><br><span class="line"><span class="function">2.<span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//提供服务方法</span></span><br><span class="line"><span class="number">3</span>.<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException</span></span><br><span class="line"><span class="function">	<span class="comment">//获取Servlet的一些信息</span></span></span><br><span class="line"><span class="function">4.<span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//销毁方法</span></span><br><span class="line">    <span class="comment">//在服务器正常关闭时，执行一次</span></span><br><span class="line"><span class="number">5</span>.<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>4.配置Servlet</p>
<ul>
<li>在web.xml中</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">    	<span class="comment">//取名</span></span><br><span class="line">       &lt;servlet-name&gt;demo1&lt;/servlet-name&gt;</span><br><span class="line">    	<span class="comment">//class文件的目录</span></span><br><span class="line">       &lt;servlet-<span class="class"><span class="keyword">class</span>&gt;<span class="title">servlet</span>.<span class="title">ServletDome1</span>&lt;/<span class="title">servlet</span>-<span class="title">class</span>&gt;</span></span><br><span class="line"><span class="class">   &lt;/<span class="title">servlet</span>&gt;</span></span><br><span class="line"><span class="class">   	//给<span class="title">Servlet</span>-<span class="title">name</span>进行映射↑</span></span><br><span class="line"><span class="class">   &lt;<span class="title">servlet</span>-<span class="title">mapping</span>&gt;</span></span><br><span class="line"><span class="class">       &lt;<span class="title">servlet</span>-<span class="title">name</span>&gt;<span class="title">demo1</span>&lt;/<span class="title">servlet</span>-<span class="title">name</span>&gt;</span></span><br><span class="line"><span class="class">           //资源路径</span></span><br><span class="line"><span class="class">       &lt;<span class="title">url</span>-<span class="title">pattern</span>&gt;/<span class="title">demo1</span>&lt;/<span class="title">url</span>-<span class="title">pattern</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>Servlet中的生命周期</p>
</li>
<li><p>Servlet3.0</p>
<ul>
<li><p>步骤</p>
<ul>
<li><p>1.创建JavaEE项目时，选择Servlet3.0以上版本，不用创建web.xml</p>
</li>
<li><p>2.定义一个类，实现接口</p>
</li>
<li><p>复写</p>
</li>
<li><p>在类上使用@WebServlet注解</p>
<p><code>@WebServlet(&quot;资源路径&quot;)</code></p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="体系结构"><a href="#体系结构" class="headerlink" title="体系结构"></a>体系结构</h2><p>GenericServlet ： 可以实现servic（）方法</p>
<p>HttpServlet：复写doGet/doPost方法</p>
<h2 id="Servlet相关配置"><a href="#Servlet相关配置" class="headerlink" title="Servlet相关配置"></a>Servlet相关配置</h2><p>1.urlpartten</p>
<p>​    1.可以访问多个路径：@WebServlet({“/d 4”,”/dd4”})</p>
<p>​    2.路径定义规则：</p>
<p>​        1./xxx</p>
<p>​        2./xxx/xxx:多层路径，目录结构</p>
<p>​        3.*.do</p>
]]></content>
      <categories>
        <category>WEB</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>Servlet</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库笔记</title>
    <url>/2020/02/16/%E4%BB%A5%E5%89%8D%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%9C%E8%A5%BF/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h1><h2 id="DDL-（Data-Definition-Language）数据定义语言"><a href="#DDL-（Data-Definition-Language）数据定义语言" class="headerlink" title="DDL:（Data Definition Language）数据定义语言"></a>DDL:（Data Definition Language）数据定义语言</h2><a id="more"></a>

 <!-- more -->

<h3 id="1-基础查询"><a href="#1-基础查询" class="headerlink" title="1.基础查询"></a>1.基础查询</h3><hr>
<h3 id="2-条件查询"><a href="#2-条件查询" class="headerlink" title="2.条件查询"></a>2.条件查询</h3><ul>
<li><p>语法：  select 查询列表 from 表明 where 筛选条件;</p>
</li>
<li><p>测试题</p>
<ul>
<li>查询没有奖金，且工资小于18000的salary, last_name：  </li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">SELECT </span><br><span class="line">  salary,</span><br><span class="line">  last_name </span><br><span class="line">FROM</span><br><span class="line">  employees </span><br><span class="line">WHERE commission_pct IS NULL </span><br><span class="line">  AND salary &lt; 18000;</span><br></pre></td></tr></table></figure>

<h3 id="3-排序查询"><a href="#3-排序查询" class="headerlink" title="3.排序查询"></a>3.排序查询</h3><ul>
<li><p>语法： </p>
<p>select 查询列表</p>
<p>from 表</p>
<p>【where 筛选条件】</p>
<p>order by 排序列表 【asc|desc】</p>
</li>
<li><p>测试题</p>
<ul>
<li>查询员工的姓名和部门号和年薪，按年薪降序，按姓名升序</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">SELECT </span><br><span class="line">  last_name,</span><br><span class="line">  department_id,</span><br><span class="line">  salary * 12 * (1+ IFNULL(commission_pct, 0)) AS 年薪 </span><br><span class="line">FROM</span><br><span class="line">  employees </span><br><span class="line">ORDER BY 年薪 DESC,</span><br><span class="line">  last_name ASC ;</span><br></pre></td></tr></table></figure>

<h3 id="4-分组查询"><a href="#4-分组查询" class="headerlink" title="4.分组查询"></a>4.分组查询</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  - 语法： </span><br><span class="line"></span><br><span class="line">  select 分组函数，列（要求出现在group by的后面）</span><br><span class="line"></span><br><span class="line">  from 表</span><br><span class="line"></span><br><span class="line">  【where 筛选条件】</span><br><span class="line"></span><br><span class="line">  group by 分组的列表</span><br><span class="line"></span><br><span class="line">  【having 分组后的筛选】</span><br><span class="line"></span><br><span class="line">  【order by 子句】</span><br><span class="line"></span><br><span class="line">- 测试题</span><br><span class="line"></span><br><span class="line">  - 查询邮箱中包含a字符的，每个部门的平均工资</span><br><span class="line">  AVG(salary),</span><br><span class="line">  department_id </span><br><span class="line">FROM</span><br><span class="line">  employees </span><br><span class="line">WHERE email LIKE &#39;%a%&#39; </span><br><span class="line">GR</span><br><span class="line">OUP BY department_id ;</span><br></pre></td></tr></table></figure>

<h3 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select 查询列表</span><br><span class="line">from 表1 别名 【连接类型】</span><br><span class="line">join 表2 别名</span><br><span class="line">on 连接条件</span><br><span class="line"></span><br><span class="line">【where 筛选条件】</span><br><span class="line"></span><br><span class="line">【group by 分组】</span><br><span class="line"></span><br><span class="line">【having 筛选条件】</span><br><span class="line"></span><br><span class="line">【ord	er by 排序列表】</span><br></pre></td></tr></table></figure>

<ul>
<li><p>测试题</p>
<ul>
<li><p>查询员工名和对应的部门名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT </span><br><span class="line">  last_name,</span><br><span class="line">  department_name </span><br><span class="line">FROM</span><br><span class="line">  employees,</span><br><span class="line">  departments </span><br><span class="line">WHERE employees.&#96;department_id&#96; &#x3D; departments.&#96;department_id&#96; ;</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
<h3 id="6-子查询"><a href="#6-子查询" class="headerlink" title="6.子查询"></a>6.子查询</h3><ul>
<li>嵌套在其他语句内部的select语句成为子查询或内查询</li>
<li>外面的语句可以是insert、update、delete、select等，一般select作为外面语句较多</li>
<li>外面如果为select语句，则此语句称为外查询或主查询</li>
<li>分类： <ul>
<li>按子查询出现的位置： <ul>
<li>select后面： 仅仅支持标量子查询</li>
<li>from后面： 支持表子查询</li>
<li>where或having后面： 支持标量子查询，列子查询，行子查询（较少）</li>
<li>exists后面（相关子查询）：支持表子查询</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="7-分页查询"><a href="#7-分页查询" class="headerlink" title="7.分页查询"></a>7.分页查询</h3><ul>
<li><p>语法： </p>
<p>select 查询列表</p>
<p>from 表</p>
<p>【join type】 join 表2</p>
<p>on 连接条件</p>
<p>where 筛选条件</p>
<p>group by 分组字段</p>
<p>having 分组后的筛选</p>
<p>order by 排序的字段】</p>
<p>limit offset，size；</p>
<p>offset： 要显示条目的起始索引（从0开始）</p>
<p>size： 要显示的条目个数</p>
</li>
<li><p>测试题：</p>
<ul>
<li>有奖金的员工信息，并且工资较高的前10名显示出来</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT </span><br><span class="line">  * </span><br><span class="line">FROM</span><br><span class="line">  employees </span><br><span class="line">WHERE commission_pct IS NOT NULL </span><br><span class="line">ORDER BY salary DESC </span><br><span class="line">LIMIT 10 ;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="8-联合查询"><a href="#8-联合查询" class="headerlink" title="8.联合查询"></a>8.联合查询</h3><ul>
<li><p>语法： </p>
<p>查询语句1</p>
<p>union 【ALL】</p>
<p>查询语句2</p>
<p>union 【ALL】</p>
<p>…</p>
</li>
<li><p>应用场景：要查询的结果来自于多个表，且多个表没有直接的连接关系，但查询的信息一致</p>
</li>
</ul>
<h3 id="9-查询总结"><a href="#9-查询总结" class="headerlink" title="9.查询总结"></a>9.查询总结</h3><ul>
<li><p>语法： </p>
<p>select 查询列表 7</p>
<p>from 表1 别名 1</p>
<p>连接类型 join 表2 2</p>
<p>on 连接条件 3</p>
<p>where 筛选 4</p>
<p>group by 分组列表 5</p>
<p>having 筛选 6</p>
<p>order by 排序列表 8</p>
<p>limit 排序列表 9</p>
</li>
</ul>
<h2 id="数据库的设计"><a href="#数据库的设计" class="headerlink" title="数据库的设计"></a>数据库的设计</h2><h3 id="1-多表之间的关系"><a href="#1-多表之间的关系" class="headerlink" title="1.多表之间的关系"></a>1.多表之间的关系</h3><h4 id="1-一对多"><a href="#1-一对多" class="headerlink" title="1.一对多"></a>1.一对多</h4><h4 id="2-多对多"><a href="#2-多对多" class="headerlink" title="2.多对多"></a>2.多对多</h4><h3 id="2-数据库范式"><a href="#2-数据库范式" class="headerlink" title="2.数据库范式"></a>2.数据库范式</h3><h4 id="第一范式"><a href="#第一范式" class="headerlink" title="第一范式"></a>第一范式</h4><h4 id="第二范式"><a href="#第二范式" class="headerlink" title="第二范式"></a>第二范式</h4><p>1.函数依赖：A–&gt;B,通过A属性(组)的值，确定唯一B属性的值，则B依赖A</p>
<p> 如：              <strong>学号–&gt;名字    （学号，课程 ）    –&gt; 分数</strong></p>
<p>2.完全函数依赖</p>
<p>如：                <strong>（学号，课程） –&gt; 分数</strong></p>
<p>3.部分函数依赖</p>
<p>如：                 <strong>（学号，课程） –&gt;名字</strong></p>
<p>4.传递性依赖</p>
<p>如：                   <strong>学号–&gt;系名，系名–&gt;系班主任</strong><br>5：码： </p>
<p>如：                 <strong>该表的码为（学号，课程名称</strong></p>
<h4 id="第三范式"><a href="#第三范式" class="headerlink" title="第三范式"></a>第三范式</h4><h2 id="数据库的备份和还原"><a href="#数据库的备份和还原" class="headerlink" title="数据库的备份和还原"></a>数据库的备份和还原</h2><h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><h3 id="1-内连接查询"><a href="#1-内连接查询" class="headerlink" title="1.内连接查询"></a>1.内连接查询</h3><p>​    1.隐式内连接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">	t1.name  --员工表的名字</span><br><span class="line">	t1.gender ---员工表的性别</span><br><span class="line">	t2.name    ---部门表的名字</span><br><span class="line">FORM</span><br><span class="line">	emp t1 ,</span><br><span class="line">	dept t2</span><br><span class="line">WHERE</span><br><span class="line">	t1.&#96;dept_id&#96; &#x3D; t2.&#96;id&#96;;</span><br></pre></td></tr></table></figure>

<p>​    2,显式内连接</p>
<p>​        *语法：<code>select 字段列表 from 表名1 inner join 表名2 on 条件</code>    </p>
<h3 id="2-外连接查询"><a href="#2-外连接查询" class="headerlink" title="2.外连接查询"></a>2.外连接查询</h3><p>​    1.左外连接： </p>
<p>​        语法：<code>select 字段列表 from 表1 left join 表二 on 条件</code></p>
<p>​                <strong>查询的是左表所有数据交集部分</strong></p>
<p>​    2.右外连接</p>
<p>​        语法：<code>select 字段列表 from 表1 right join 表二 on 条件</code></p>
<h3 id="3-子查询"><a href="#3-子查询" class="headerlink" title="3.子查询"></a>3.子查询</h3><p>​    概念：查询中嵌套查询</p>
<p>​    例子： </p>
<blockquote>
<p>– 查询工资最高的员工信息</p>
<p><code>SELECT * FROM emp WHERE salary =（SELECT MAX（salary）FROM emp;</code></p>
</blockquote>
<h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><h3 id="操作："><a href="#操作：" class="headerlink" title="操作："></a>操作：</h3><p>​        1.开启事务  <strong><code>start transaction</code></strong></p>
<p>​        2.提交事务  <strong>``commit`</strong></p>
<p>​        3.回滚  <strong>``rollback`</strong></p>
<p>​        4.自动提交   <strong><code>mysql自动提交</code></strong></p>
<p>​            查看事务的提交方式：SELECT @@autocommit ; 1为自动 0为手动</p>
<p>​            修改提交方式 set @@autocommit = 0 ；</p>
<h3 id="事务的四大特性"><a href="#事务的四大特性" class="headerlink" title="事务的四大特性"></a>事务的四大特性</h3><p>​        1.原子性：是不可分割的最小操作单位，同时成功，同时失败</p>
<p>​        2.持久性：提交后，持久保持数据</p>
<p>​        3.隔离性：多个事务，互相独立</p>
<p>​        4.一致性：事务操作前后，数据总量不变    </p>
<h2 id="DCL"><a href="#DCL" class="headerlink" title="DCL"></a>DCL</h2><p>​        管理用户，授权</p>
<hr>
<hr>
<hr>
<hr>
<h1 id="数据库练习1"><a href="#数据库练习1" class="headerlink" title="数据库练习1"></a>数据库练习1</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--建表</span><br><span class="line"></span><br><span class="line">--学生表</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;Student&#96;(</span><br><span class="line"></span><br><span class="line">&#96;s_id&#96; VARCHAR(20),</span><br><span class="line"></span><br><span class="line">&#96;s_name&#96; VARCHAR(20) NOT NULL DEFAULT &#39;&#39;,</span><br><span class="line"></span><br><span class="line">&#96;s_birth&#96; VARCHAR(20) NOT NULL DEFAULT &#39;&#39;,</span><br><span class="line"></span><br><span class="line">&#96;s_sex&#96; VARCHAR(10) NOT NULL DEFAULT &#39;&#39;,</span><br><span class="line"></span><br><span class="line">PRIMARY KEY(&#96;s_id&#96;)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">--课程表</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;Course&#96;(</span><br><span class="line"></span><br><span class="line">&#96;c_id&#96;  VARCHAR(20),</span><br><span class="line"></span><br><span class="line">&#96;c_name&#96; VARCHAR(20) NOT NULL DEFAULT &#39;&#39;,</span><br><span class="line"></span><br><span class="line">&#96;t_id&#96; VARCHAR(20) NOT NULL,</span><br><span class="line"></span><br><span class="line">PRIMARY KEY(&#96;c_id&#96;)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">--教师表</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;Teacher&#96;(</span><br><span class="line"></span><br><span class="line">&#96;t_id&#96; VARCHAR(20),</span><br><span class="line"></span><br><span class="line">&#96;t_name&#96; VARCHAR(20) NOT NULL DEFAULT &#39;&#39;,</span><br><span class="line"></span><br><span class="line">PRIMARY KEY(&#96;t_id&#96;)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">--成绩表</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;Score&#96;(</span><br><span class="line"></span><br><span class="line">&#96;s_id&#96; VARCHAR(20),</span><br><span class="line"></span><br><span class="line">&#96;c_id&#96;  VARCHAR(20),</span><br><span class="line"></span><br><span class="line">&#96;s_score&#96; INT(3),</span><br><span class="line"></span><br><span class="line">PRIMARY KEY(&#96;s_id&#96;,&#96;c_id&#96;)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">--插入学生表测试数据</span><br><span class="line"></span><br><span class="line">insert into Student values(&#39;01&#39; , &#39;赵雷&#39; , &#39;1990-01-01&#39; , &#39;男&#39;);</span><br><span class="line"></span><br><span class="line">insert into Student values(&#39;02&#39; , &#39;钱电&#39; , &#39;1990-12-21&#39; , &#39;男&#39;);</span><br><span class="line"></span><br><span class="line">insert into Student values(&#39;03&#39; , &#39;孙风&#39; , &#39;1990-05-20&#39; , &#39;男&#39;);</span><br><span class="line"></span><br><span class="line">insert into Student values(&#39;04&#39; , &#39;李云&#39; , &#39;1990-08-06&#39; , &#39;男&#39;);</span><br><span class="line"></span><br><span class="line">insert into Student values(&#39;05&#39; , &#39;周梅&#39; , &#39;1991-12-01&#39; , &#39;女&#39;);</span><br><span class="line"></span><br><span class="line">insert into Student values(&#39;06&#39; , &#39;吴兰&#39; , &#39;1992-03-01&#39; , &#39;女&#39;);</span><br><span class="line"></span><br><span class="line">insert into Student values(&#39;07&#39; , &#39;郑竹&#39; , &#39;1989-07-01&#39; , &#39;女&#39;);</span><br><span class="line"></span><br><span class="line">insert into Student values(&#39;08&#39; , &#39;王菊&#39; , &#39;1990-01-20&#39; , &#39;女&#39;);</span><br><span class="line"></span><br><span class="line">--课程表测试数据</span><br><span class="line"></span><br><span class="line">insert into Course values(&#39;01&#39; , &#39;语文&#39; , &#39;02&#39;);</span><br><span class="line"></span><br><span class="line">insert into Course values(&#39;02&#39; , &#39;数学&#39; , &#39;01&#39;);</span><br><span class="line"></span><br><span class="line">insert into Course values(&#39;03&#39; , &#39;英语&#39; , &#39;03&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--教师表测试数据</span><br><span class="line"></span><br><span class="line">insert into Teacher values(&#39;01&#39; , &#39;张三&#39;);</span><br><span class="line"></span><br><span class="line">insert into Teacher values(&#39;02&#39; , &#39;李四&#39;);</span><br><span class="line"></span><br><span class="line">insert into Teacher values(&#39;03&#39; , &#39;王五&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--成绩表测试数据</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;01&#39; , &#39;01&#39; , 80);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;01&#39; , &#39;02&#39; , 90);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;01&#39; , &#39;03&#39; , 99);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;02&#39; , &#39;01&#39; , 70);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;02&#39; , &#39;02&#39; , 60);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;02&#39; , &#39;03&#39; , 80);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;03&#39; , &#39;01&#39; , 80);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;03&#39; , &#39;02&#39; , 80);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;03&#39; , &#39;03&#39; , 80);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;04&#39; , &#39;01&#39; , 50);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;04&#39; , &#39;02&#39; , 30);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;04&#39; , &#39;03&#39; , 20);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;05&#39; , &#39;01&#39; , 76);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;05&#39; , &#39;02&#39; , 87);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;06&#39; , &#39;01&#39; , 31);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;06&#39; , &#39;03&#39; , 34);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;07&#39; , &#39;02&#39; , 89);</span><br><span class="line"></span><br><span class="line">insert into Score values(&#39;07&#39; , &#39;03&#39; , 98);</span><br></pre></td></tr></table></figure>

<h3 id="练习题和sql语句"><a href="#练习题和sql语句" class="headerlink" title="练习题和sql语句"></a>练习题和sql语句</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">练习题和sql语句</span><br><span class="line">-- 1、查询&quot;01&quot;课程比&quot;02&quot;课程成绩高的学生的信息及课程分数</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">select a.* ,b.s_score as 01_score,c.s_score as 02_score from </span><br><span class="line"></span><br><span class="line">student a </span><br><span class="line"></span><br><span class="line">join score b on a.s_id&#x3D;b.s_id and b.c_id&#x3D;&#39;01&#39;</span><br><span class="line"></span><br><span class="line">left join score c on a.s_id&#x3D;c.s_id and c.c_id&#x3D;&#39;02&#39; or c.c_id &#x3D; NULL where b.s_score&gt;c.s_score</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">--也可以这样写</span><br><span class="line"></span><br><span class="line">select a.*,b.s_score as 01_score,c.s_score as 02_score from student   a,score b,score c </span><br><span class="line"></span><br><span class="line">where a.s_id&#x3D;b.s_id </span><br><span class="line"></span><br><span class="line">and a.s_id&#x3D;c.s_id </span><br><span class="line"></span><br><span class="line">and b.c_id&#x3D;&#39;01&#39; </span><br><span class="line"></span><br><span class="line">and c.c_id&#x3D;&#39;02&#39; </span><br><span class="line"></span><br><span class="line">and b.s_score&gt;c.s_score</span><br><span class="line"></span><br><span class="line">-- 2、查询&quot;01&quot;课程比&quot;02&quot;课程成绩低的学生的信息及课程分数</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">select a.* ,b.s_score as 01_score,c.s_score as 02_score from </span><br><span class="line"></span><br><span class="line">student a left join score b on a.s_id&#x3D;b.s_id and b.c_id&#x3D;&#39;01&#39; or b.c_id&#x3D;NULL </span><br><span class="line"></span><br><span class="line">join score c on a.s_id&#x3D;c.s_id and c.c_id&#x3D;&#39;02&#39; where b.s_score&lt;c.s_score</span><br><span class="line"></span><br><span class="line">			</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 3、查询平均成绩大于等于60分的同学的学生编号和学生姓名和平均成绩</span><br><span class="line"></span><br><span class="line">select b.s_id,b.s_name,ROUND(AVG(a.s_score),2) as avg_score from </span><br><span class="line"></span><br><span class="line">student b </span><br><span class="line"></span><br><span class="line">join score a on b.s_id &#x3D; a.s_id</span><br><span class="line"></span><br><span class="line">GROUP BY b.s_id,b.s_name HAVING avg_score &gt;&#x3D;60;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 4、查询平均成绩小于60分的同学的学生编号和学生姓名和平均成绩</span><br><span class="line"></span><br><span class="line">-- (包括有成绩的和无成绩的)</span><br><span class="line"></span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">select b.s_id,b.s_name,ROUND(AVG(a.s_score),2) as avg_score from </span><br><span class="line"></span><br><span class="line">student b </span><br><span class="line"></span><br><span class="line">left join score a on b.s_id &#x3D; a.s_id</span><br><span class="line"></span><br><span class="line">GROUP BY b.s_id,b.s_name HAVING avg_score &lt;60</span><br><span class="line"></span><br><span class="line">union</span><br><span class="line"></span><br><span class="line">select a.s_id,a.s_name,0 as avg_score from </span><br><span class="line"></span><br><span class="line">student a </span><br><span class="line"></span><br><span class="line">where a.s_id not in (</span><br><span class="line"></span><br><span class="line">select distinct s_id from score);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 5、查询所有同学的学生编号、学生姓名、选课总数、所有课程的总成绩</span><br><span class="line"></span><br><span class="line">select a.s_id,a.s_name,count(b.c_id) as sum_course,sum(b.s_score) as sum_score from </span><br><span class="line"></span><br><span class="line">student a </span><br><span class="line"></span><br><span class="line">left join score b on a.s_id&#x3D;b.s_id</span><br><span class="line"></span><br><span class="line">GROUP BY a.s_id,a.s_name;</span><br><span class="line"></span><br><span class="line">			</span><br><span class="line"></span><br><span class="line">			</span><br><span class="line"></span><br><span class="line">-- 6、查询&quot;李&quot;姓老师的数量 </span><br><span class="line"></span><br><span class="line">select count(t_id) from teacher where t_name like &#39;李%&#39;;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">-- 7、查询学过&quot;张三&quot;老师授课的同学的信息 </span><br><span class="line"></span><br><span class="line">select a.* from </span><br><span class="line"></span><br><span class="line">student a </span><br><span class="line"></span><br><span class="line">join score b on a.s_id&#x3D;b.s_id where b.c_id in(</span><br><span class="line"></span><br><span class="line">select c_id from course where t_id &#x3D;(</span><br><span class="line"></span><br><span class="line">select t_id from teacher where t_name &#x3D; &#39;张三&#39;));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 8、查询没学过&quot;张三&quot;老师授课的同学的信息 </span><br><span class="line"></span><br><span class="line">select * from </span><br><span class="line"></span><br><span class="line">    student c </span><br><span class="line"></span><br><span class="line">    where c.s_id not in(</span><br><span class="line"></span><br><span class="line">        select a.s_id from student a join score b on a.s_id&#x3D;b.s_id where b.c_id in(</span><br><span class="line"></span><br><span class="line">        select a.c_id from course a join teacher b on a.t_id &#x3D; b.t_id where t_name &#x3D;&#39;张三&#39;));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 9、查询学过编号为&quot;01&quot;并且也学过编号为&quot;02&quot;的课程的同学的信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select a.* from </span><br><span class="line"></span><br><span class="line">student a,score b,score c </span><br><span class="line"></span><br><span class="line">where a.s_id &#x3D; b.s_id  and a.s_id &#x3D; c.s_id and b.c_id&#x3D;&#39;01&#39; and c.c_id&#x3D;&#39;02&#39;;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">-- 10、查询学过编号为&quot;01&quot;但是没有学过编号为&quot;02&quot;的课程的同学的信息</span><br><span class="line"></span><br><span class="line">			</span><br><span class="line"></span><br><span class="line">select a.* from </span><br><span class="line"></span><br><span class="line">student a </span><br><span class="line"></span><br><span class="line">where a.s_id in (select s_id from score where c_id&#x3D;&#39;01&#39; ) and a.s_id not in(select s_id from score where c_id&#x3D;&#39;02&#39;)</span><br><span class="line"></span><br><span class="line">			</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 11、查询没有学全所有课程的同学的信息 </span><br><span class="line"></span><br><span class="line">--@wendiepei的写法</span><br><span class="line"></span><br><span class="line">select s.* from student s </span><br><span class="line"></span><br><span class="line">left join Score s1 on s1.s_id&#x3D;s.s_id</span><br><span class="line"></span><br><span class="line">group by s.s_id having count(s1.c_id)&lt;(select count(*) from course)	</span><br><span class="line"></span><br><span class="line">--@k1051785839的写法</span><br><span class="line"></span><br><span class="line">select *</span><br><span class="line"></span><br><span class="line">from student</span><br><span class="line"></span><br><span class="line">where s_id not in(</span><br><span class="line"></span><br><span class="line">select s_id from score t1  </span><br><span class="line"></span><br><span class="line">group by s_id having count(*) &#x3D;(select count(distinct c_id)  from course)) </span><br><span class="line"></span><br><span class="line">-- 12、查询至少有一门课与学号为&quot;01&quot;的同学所学相同的同学的信息 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select * from student where s_id in(</span><br><span class="line"></span><br><span class="line">select distinct a.s_id from score a where a.c_id in(select a.c_id from score a where a.s_id&#x3D;&#39;01&#39;)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">			</span><br><span class="line"></span><br><span class="line">-- 13、查询和&quot;01&quot;号的同学学习的课程完全相同的其他同学的信息 </span><br><span class="line"></span><br><span class="line">--@ouyang_1993的写法</span><br><span class="line"></span><br><span class="line">SELECT</span><br><span class="line"></span><br><span class="line"> Student.*</span><br><span class="line"></span><br><span class="line">FROM</span><br><span class="line"></span><br><span class="line"> Student</span><br><span class="line"></span><br><span class="line">WHERE</span><br><span class="line"></span><br><span class="line"> s_id IN (SELECT s_id FROM Score GROUP BY s_id HAVING COUNT(s_id) &#x3D; (</span><br><span class="line"></span><br><span class="line">    #下面的语句是找到&#39;01&#39;同学学习的课程数</span><br><span class="line"></span><br><span class="line">    SELECT COUNT(c_id) FROM Score WHERE s_id &#x3D; &#39;01&#39;</span><br><span class="line"></span><br><span class="line">   )</span><br><span class="line"></span><br><span class="line"> )</span><br><span class="line"></span><br><span class="line">AND s_id NOT IN (</span><br><span class="line"></span><br><span class="line"> #下面的语句是找到学过‘01’同学没学过的课程，有哪些同学。并排除他们</span><br><span class="line"></span><br><span class="line"> SELECT s_id FROM Score</span><br><span class="line"></span><br><span class="line"> WHERE c_id IN(</span><br><span class="line"></span><br><span class="line">   #下面的语句是找到‘01’同学没学过的课程</span><br><span class="line"></span><br><span class="line">   SELECT DISTINCT c_id FROM Score</span><br><span class="line"></span><br><span class="line">   WHERE c_id NOT IN (</span><br><span class="line"></span><br><span class="line">     #下面的语句是找出‘01’同学学习的课程</span><br><span class="line"></span><br><span class="line">     SELECT c_id FROM Score WHERE s_id &#x3D; &#39;01&#39;</span><br><span class="line"></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">  ) GROUP BY s_id</span><br><span class="line"></span><br><span class="line">) #下面的条件是排除01同学</span><br><span class="line"></span><br><span class="line">AND s_id NOT IN (&#39;01&#39;)</span><br><span class="line"></span><br><span class="line">--@k1051785839的写法</span><br><span class="line"></span><br><span class="line">SELECT</span><br><span class="line"></span><br><span class="line"> t3.*</span><br><span class="line"></span><br><span class="line">FROM</span><br><span class="line"></span><br><span class="line"> (</span><br><span class="line"></span><br><span class="line">  SELECT</span><br><span class="line"></span><br><span class="line">   s_id,</span><br><span class="line"></span><br><span class="line">   group_concat(c_id ORDER BY c_id) group1</span><br><span class="line"></span><br><span class="line">  FROM</span><br><span class="line"></span><br><span class="line">   score</span><br><span class="line"></span><br><span class="line">  WHERE</span><br><span class="line"></span><br><span class="line">   s_id &lt;&gt; &#39;01&#39;</span><br><span class="line"></span><br><span class="line">  GROUP BY</span><br><span class="line"></span><br><span class="line">   s_id</span><br><span class="line"></span><br><span class="line"> ) t1</span><br><span class="line"></span><br><span class="line">INNER JOIN (</span><br><span class="line"></span><br><span class="line"> SELECT</span><br><span class="line"></span><br><span class="line">  group_concat(c_id ORDER BY c_id) group2</span><br><span class="line"></span><br><span class="line"> FROM</span><br><span class="line"></span><br><span class="line">  score</span><br><span class="line"></span><br><span class="line"> WHERE</span><br><span class="line"></span><br><span class="line">  s_id &#x3D; &#39;01&#39;</span><br><span class="line"></span><br><span class="line"> GROUP BY</span><br><span class="line"></span><br><span class="line">  s_id</span><br><span class="line"></span><br><span class="line">) t2 ON t1.group1 &#x3D; t2.group2</span><br><span class="line"></span><br><span class="line">INNER JOIN student t3 ON t1.s_id &#x3D; t3.s_id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 14、查询没学过&quot;张三&quot;老师讲授的任一门课程的学生姓名 </span><br><span class="line"></span><br><span class="line">select a.s_name from student a where a.s_id not in (</span><br><span class="line"></span><br><span class="line">select s_id from score where c_id &#x3D; </span><br><span class="line"></span><br><span class="line">(select c_id from course where t_id &#x3D;(</span><br><span class="line"></span><br><span class="line">select t_id from teacher where t_name &#x3D; &#39;张三&#39;)));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 15、查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩 </span><br><span class="line"></span><br><span class="line">select a.s_id,a.s_name,ROUND(AVG(b.s_score)) from </span><br><span class="line"></span><br><span class="line">student a </span><br><span class="line"></span><br><span class="line">left join score b on a.s_id &#x3D; b.s_id</span><br><span class="line"></span><br><span class="line">where a.s_id in(</span><br><span class="line"></span><br><span class="line">select s_id from score where s_score&lt;60 GROUP BY  s_id having count(1)&gt;&#x3D;2)</span><br><span class="line"></span><br><span class="line">GROUP BY a.s_id,a.s_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 16、检索&quot;01&quot;课程分数小于60，按分数降序排列的学生信息</span><br><span class="line"></span><br><span class="line">select a.*,b.c_id,b.s_score from </span><br><span class="line"></span><br><span class="line">student a,score b </span><br><span class="line"></span><br><span class="line">where a.s_id &#x3D; b.s_id and b.c_id&#x3D;&#39;01&#39; and b.s_score&lt;60 ORDER BY b.s_score DESC;</span><br><span class="line"></span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">-- 17、按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩</span><br><span class="line"></span><br><span class="line">select a.s_id,(select s_score from score where s_id&#x3D;a.s_id and c_id&#x3D;&#39;01&#39;) as 语文,</span><br><span class="line"></span><br><span class="line">(select s_score from score where s_id&#x3D;a.s_id and c_id&#x3D;&#39;02&#39;) as 数学,</span><br><span class="line"></span><br><span class="line">(select s_score from score where s_id&#x3D;a.s_id and c_id&#x3D;&#39;03&#39;) as 英语,</span><br><span class="line"></span><br><span class="line">round(avg(s_score),2) as 平均分 from score a  GROUP BY a.s_id ORDER BY 平均分 DESC;</span><br><span class="line"></span><br><span class="line">--@喝完这杯还有一箱的写法</span><br><span class="line"></span><br><span class="line">SELECT a.s_id,MAX(CASE a.c_id WHEN &#39;01&#39; THEN a.s_score END ) 语文, </span><br><span class="line"></span><br><span class="line">MAX(CASE a.c_id WHEN &#39;02&#39; THEN a.s_score END ) 数学, </span><br><span class="line"></span><br><span class="line">MAX(CASE a.c_id WHEN &#39;03&#39; THEN a.s_score END ) 英语, </span><br><span class="line"></span><br><span class="line">avg(a.s_score),b.s_name FROM Score a JOIN Student b ON a.s_id&#x3D;b.s_id GROUP BY a.s_id ORDER BY 5 DESC		</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 18.查询各科成绩最高分、最低分和平均分：以如下形式显示：课程ID，课程name，最高分，最低分，平均分，及格率，中等率，优良率，优秀率</span><br><span class="line"></span><br><span class="line">--及格为&gt;&#x3D;60，中等为：70-80，优良为：80-90，优秀为：&gt;&#x3D;90</span><br><span class="line"></span><br><span class="line">select a.c_id,b.c_name,MAX(s_score),MIN(s_score),ROUND(AVG(s_score),2),</span><br><span class="line"></span><br><span class="line">ROUND(100*(SUM(case when a.s_score&gt;&#x3D;60 then 1 else 0 end)&#x2F;SUM(case when a.s_score then 1 else 0 end)),2) as 及格率,</span><br><span class="line"></span><br><span class="line">ROUND(100*(SUM(case when a.s_score&gt;&#x3D;70 and a.s_score&lt;&#x3D;80 then 1 else 0 end)&#x2F;SUM(case when a.s_score then 1 else 0 end)),2) as 中等率,</span><br><span class="line"></span><br><span class="line">ROUND(100*(SUM(case when a.s_score&gt;&#x3D;80 and a.s_score&lt;&#x3D;90 then 1 else 0 end)&#x2F;SUM(case when a.s_score then 1 else 0 end)),2) as 优良率,</span><br><span class="line"></span><br><span class="line">ROUND(100*(SUM(case when a.s_score&gt;&#x3D;90 then 1 else 0 end)&#x2F;SUM(case when a.s_score then 1 else 0 end)),2) as 优秀率</span><br><span class="line"></span><br><span class="line">from score a left join course b on a.c_id &#x3D; b.c_id GROUP BY a.c_id,b.c_name</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">-- 19、按各科成绩进行排序，并显示排名</span><br><span class="line"></span><br><span class="line">-- mysql没有rank函数</span><br><span class="line"></span><br><span class="line">select a.s_id,a.c_id,</span><br><span class="line"></span><br><span class="line">        @i:&#x3D;@i +1 as i保留排名,</span><br><span class="line"></span><br><span class="line">        @k:&#x3D;(case when @score&#x3D;a.s_score then @k else @i end) as rank不保留排名,</span><br><span class="line"></span><br><span class="line">        @score:&#x3D;a.s_score as score</span><br><span class="line"></span><br><span class="line">    from (</span><br><span class="line"></span><br><span class="line">        select s_id,c_id,s_score from score GROUP BY s_id,c_id,s_score ORDER BY s_score DESC</span><br><span class="line"></span><br><span class="line">)a,(select @k:&#x3D;0,@i:&#x3D;0,@score:&#x3D;0)s</span><br><span class="line"></span><br><span class="line">--@k1051785839的写法</span><br><span class="line"></span><br><span class="line">(select * from (select </span><br><span class="line"></span><br><span class="line">t1.c_id,</span><br><span class="line"></span><br><span class="line">t1.s_score,</span><br><span class="line"></span><br><span class="line">(select count(distinct t2.s_score) from score t2 where t2.s_score&gt;&#x3D;t1.s_score and t2.c_id&#x3D;&#39;01&#39;) rank</span><br><span class="line"></span><br><span class="line">FROM score t1 where t1.c_id&#x3D;&#39;01&#39;</span><br><span class="line"></span><br><span class="line">order by t1.s_score desc) t1)</span><br><span class="line"></span><br><span class="line">union</span><br><span class="line"></span><br><span class="line">(select * from (select </span><br><span class="line"></span><br><span class="line">t1.c_id,</span><br><span class="line"></span><br><span class="line">t1.s_score,</span><br><span class="line"></span><br><span class="line">(select count(distinct t2.s_score) from score t2 where t2.s_score&gt;&#x3D;t1.s_score and t2.c_id&#x3D;&#39;02&#39;) rank</span><br><span class="line"></span><br><span class="line">FROM score t1 where t1.c_id&#x3D;&#39;02&#39;</span><br><span class="line"></span><br><span class="line">order by t1.s_score desc) t2)</span><br><span class="line"></span><br><span class="line">union</span><br><span class="line"></span><br><span class="line">(select * from (select </span><br><span class="line"></span><br><span class="line">t1.c_id,</span><br><span class="line"></span><br><span class="line">t1.s_score,</span><br><span class="line"></span><br><span class="line">(select count(distinct t2.s_score) from score t2 where t2.s_score&gt;&#x3D;t1.s_score and t2.c_id&#x3D;&#39;03&#39;) rank</span><br><span class="line"></span><br><span class="line">FROM score t1 where t1.c_id&#x3D;&#39;03&#39;</span><br><span class="line"></span><br><span class="line">order by t1.s_score desc) t3)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 20、查询学生的总成绩并进行排名</span><br><span class="line"></span><br><span class="line">select a.s_id,</span><br><span class="line"></span><br><span class="line">@i:&#x3D;@i+1 as i,</span><br><span class="line"></span><br><span class="line">@k:&#x3D;(case when @score&#x3D;a.sum_score then @k else @i end) as rank,</span><br><span class="line"></span><br><span class="line">@score:&#x3D;a.sum_score as score</span><br><span class="line"></span><br><span class="line">from (select s_id,SUM(s_score) as sum_score from score GROUP BY s_id ORDER BY sum_score DESC)a,</span><br><span class="line"></span><br><span class="line">(select @k:&#x3D;0,@i:&#x3D;0,@score:&#x3D;0)s</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">-- 21、查询不同老师所教不同课程平均分从高到低显示 </span><br><span class="line"></span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">select a.t_id,c.t_name,a.c_id,ROUND(avg(s_score),2) as avg_score from course a</span><br><span class="line"></span><br><span class="line">left join score b on a.c_id&#x3D;b.c_id </span><br><span class="line"></span><br><span class="line">left join teacher c on a.t_id&#x3D;c.t_id</span><br><span class="line"></span><br><span class="line">GROUP BY a.c_id,a.t_id,c.t_name ORDER BY avg_score DESC;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 22、查询所有课程的成绩第2名到第3名的学生信息及该课程成绩</span><br><span class="line"></span><br><span class="line">			</span><br><span class="line"></span><br><span class="line">select d.*,c.排名,c.s_score,c.c_id from (</span><br><span class="line"></span><br><span class="line">                select a.s_id,a.s_score,a.c_id,@i:&#x3D;@i+1 as 排名 from score a,(select @i:&#x3D;0)s where a.c_id&#x3D;&#39;01&#39;  </span><br><span class="line"></span><br><span class="line">ORDER BY a.s_score DESC  </span><br><span class="line"></span><br><span class="line">            )c</span><br><span class="line"></span><br><span class="line">            left join student d on c.s_id&#x3D;d.s_id</span><br><span class="line"></span><br><span class="line">            where 排名 BETWEEN 2 AND 3</span><br><span class="line"></span><br><span class="line">            UNION</span><br><span class="line"></span><br><span class="line">            select d.*,c.排名,c.s_score,c.c_id from (</span><br><span class="line"></span><br><span class="line">                select a.s_id,a.s_score,a.c_id,@j:&#x3D;@j+1 as 排名 from score a,(select @j:&#x3D;0)s where a.c_id&#x3D;&#39;02&#39;  </span><br><span class="line"></span><br><span class="line">ORDER BY a.s_score DESC</span><br><span class="line"></span><br><span class="line">            )c</span><br><span class="line"></span><br><span class="line">            left join student d on c.s_id&#x3D;d.s_id</span><br><span class="line"></span><br><span class="line">            where 排名 BETWEEN 2 AND 3</span><br><span class="line"></span><br><span class="line">            UNION</span><br><span class="line"></span><br><span class="line">            select d.*,c.排名,c.s_score,c.c_id from (</span><br><span class="line"></span><br><span class="line">                select a.s_id,a.s_score,a.c_id,@k:&#x3D;@k+1 as 排名 from score a,(select @k:&#x3D;0)s where a.c_id&#x3D;&#39;03&#39; </span><br><span class="line"></span><br><span class="line">ORDER BY a.s_score DESC</span><br><span class="line"></span><br><span class="line">            )c</span><br><span class="line"></span><br><span class="line">            left join student d on c.s_id&#x3D;d.s_id</span><br><span class="line"></span><br><span class="line">            where 排名 BETWEEN 2 AND 3;</span><br><span class="line"></span><br><span class="line">			</span><br><span class="line"></span><br><span class="line">-- 23、统计各科成绩各分数段人数：课程编号,课程名称,[100-85],[85-70],[70-60],[0-60]及所占百分比</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select distinct f.c_name,a.c_id,b.&#96;85-100&#96;,b.百分比,c.&#96;70-85&#96;,c.百分比,d.&#96;60-70&#96;,d.百分比,e.&#96;0-60&#96;,e.百分比 from score a</span><br><span class="line"></span><br><span class="line">left join (select c_id,SUM(case when s_score &gt;85 and s_score &lt;&#x3D;100 then 1 else 0 end) as &#96;85-100&#96;,</span><br><span class="line"></span><br><span class="line">ROUND(100*(SUM(case when s_score &gt;85 and s_score &lt;&#x3D;100 then 1 else 0 end)&#x2F;count(*)),2) as 百分比</span><br><span class="line"></span><br><span class="line">from score GROUP BY c_id)b on a.c_id&#x3D;b.c_id</span><br><span class="line"></span><br><span class="line">left join (select c_id,SUM(case when s_score &gt;70 and s_score &lt;&#x3D;85 then 1 else 0 end) as &#96;70-85&#96;,</span><br><span class="line"></span><br><span class="line">ROUND(100*(SUM(case when s_score &gt;70 and s_score &lt;&#x3D;85 then 1 else 0 end)&#x2F;count(*)),2) as 百分比</span><br><span class="line"></span><br><span class="line">from score GROUP BY c_id)c on a.c_id&#x3D;c.c_id</span><br><span class="line"></span><br><span class="line">left join (select c_id,SUM(case when s_score &gt;60 and s_score &lt;&#x3D;70 then 1 else 0 end) as &#96;60-70&#96;,</span><br><span class="line"></span><br><span class="line">ROUND(100*(SUM(case when s_score &gt;60 and s_score &lt;&#x3D;70 then 1 else 0 end)&#x2F;count(*)),2) as 百分比</span><br><span class="line"></span><br><span class="line">from score GROUP BY c_id)d on a.c_id&#x3D;d.c_id</span><br><span class="line"></span><br><span class="line">left join (select c_id,SUM(case when s_score &gt;&#x3D;0 and s_score &lt;&#x3D;60 then 1 else 0 end) as &#96;0-60&#96;,</span><br><span class="line"></span><br><span class="line">ROUND(100*(SUM(case when s_score &gt;&#x3D;0 and s_score &lt;&#x3D;60 then 1 else 0 end)&#x2F;count(*)),2) as 百分比</span><br><span class="line"></span><br><span class="line">from score GROUP BY c_id)e on a.c_id&#x3D;e.c_id</span><br><span class="line"></span><br><span class="line">left join course f on a.c_id &#x3D; f.c_id</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">-- 24、查询学生平均成绩及其名次 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select a.s_id,</span><br><span class="line"></span><br><span class="line">@i:&#x3D;@i+1 as &#39;不保留空缺排名&#39;,</span><br><span class="line"></span><br><span class="line">@k:&#x3D;(case when @avg_score&#x3D;a.avg_s then @k else @i end) as &#39;保留空缺排名&#39;,</span><br><span class="line"></span><br><span class="line">@avg_score:&#x3D;avg_s as &#39;平均分&#39;</span><br><span class="line"></span><br><span class="line">from (select s_id,ROUND(AVG(s_score),2) as avg_s from score GROUP BY s_id ORDER BY avg_s DESC)a,(select @avg_score:&#x3D;0,@i:&#x3D;0,@k:&#x3D;0)b;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 25、查询各科成绩前三名的记录</span><br><span class="line"></span><br><span class="line">-- 1.选出b表比a表成绩大的所有组</span><br><span class="line"></span><br><span class="line">-- 2.选出比当前id成绩大的 小于三个的</span><br><span class="line"></span><br><span class="line">select a.s_id,a.c_id,a.s_score from score a </span><br><span class="line"></span><br><span class="line">left join score b on a.c_id &#x3D; b.c_id and a.s_score&lt;b.s_score</span><br><span class="line"></span><br><span class="line">group by a.s_id,a.c_id,a.s_score HAVING COUNT(b.s_id)&lt;3</span><br><span class="line"></span><br><span class="line">ORDER BY a.c_id,a.s_score DESC</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 26、查询每门课程被选修的学生数 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select c_id,count(s_id) from score a GROUP BY c_id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 27、查询出只有两门课程的全部学生的学号和姓名 </span><br><span class="line"></span><br><span class="line">select s_id,s_name from student where s_id in(</span><br><span class="line"></span><br><span class="line">select s_id from score GROUP BY s_id HAVING COUNT(c_id)&#x3D;2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 28、查询男生、女生人数 </span><br><span class="line"></span><br><span class="line">select s_sex,COUNT(s_sex) as 人数  from student GROUP BY s_sex</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 29、查询名字中含有&quot;风&quot;字的学生信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select * from student where s_name like &#39;%风%&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 30、查询同名同性学生名单，并统计同名人数 </span><br><span class="line"></span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">select a.s_name,a.s_sex,count(*) from student a  JOIN </span><br><span class="line"></span><br><span class="line">student b on a.s_id !&#x3D;b.s_id and a.s_name &#x3D; b.s_name and a.s_sex &#x3D; b.s_sex</span><br><span class="line"></span><br><span class="line">GROUP BY a.s_name,a.s_sex</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 31、查询1990年出生的学生名单</span><br><span class="line"></span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">select s_name from student where s_birth like &#39;1990%&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 32、查询每门课程的平均成绩，结果按平均成绩降序排列，平均成绩相同时，按课程编号升序排列 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select c_id,ROUND(AVG(s_score),2) as avg_score from score GROUP BY c_id ORDER BY avg_score DESC,c_id ASC</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 33、查询平均成绩大于等于85的所有学生的学号、姓名和平均成绩 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select a.s_id,b.s_name,ROUND(avg(a.s_score),2) as avg_score from score a</span><br><span class="line"></span><br><span class="line">left join student b on a.s_id&#x3D;b.s_id GROUP BY s_id HAVING avg_score&gt;&#x3D;85</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">-- 34、查询课程名称为&quot;数学&quot;，且分数低于60的学生姓名和分数 </span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">select a.s_name,b.s_score from score b join student a on a.s_id&#x3D;b.s_id where b.c_id&#x3D;(</span><br><span class="line"></span><br><span class="line">select c_id from course where c_name &#x3D;&#39;数学&#39;) and b.s_score&lt;60</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 35、查询所有学生的课程及分数情况； </span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">select a.s_id,a.s_name,</span><br><span class="line"></span><br><span class="line">SUM(case c.c_name when &#39;语文&#39; then b.s_score else 0 end) as &#39;语文&#39;,</span><br><span class="line"></span><br><span class="line">SUM(case c.c_name when &#39;数学&#39; then b.s_score else 0 end) as &#39;数学&#39;,</span><br><span class="line"></span><br><span class="line">SUM(case c.c_name when &#39;英语&#39; then b.s_score else 0 end) as &#39;英语&#39;,</span><br><span class="line"></span><br><span class="line">SUM(b.s_score) as  &#39;总分&#39;</span><br><span class="line"></span><br><span class="line">from student a left join score b on a.s_id &#x3D; b.s_id </span><br><span class="line"></span><br><span class="line">left join course c on b.c_id &#x3D; c.c_id </span><br><span class="line"></span><br><span class="line">GROUP BY a.s_id,a.s_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> -- 36、查询任何一门课程成绩在70分以上的姓名、课程名称和分数； </span><br><span class="line"></span><br><span class="line">select a.s_name,b.c_name,c.s_score from course b left join score c on b.c_id &#x3D; c.c_id</span><br><span class="line"></span><br><span class="line">left join student a on a.s_id&#x3D;c.s_id where c.s_score&gt;&#x3D;70</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 37、查询不及格的课程</span><br><span class="line"></span><br><span class="line">select a.s_id,a.c_id,b.c_name,a.s_score from score a left join course b on a.c_id &#x3D; b.c_id</span><br><span class="line"></span><br><span class="line">where a.s_score&lt;60 </span><br><span class="line"></span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">--38、查询课程编号为01且课程成绩在80分以上的学生的学号和姓名； </span><br><span class="line"></span><br><span class="line">select a.s_id,b.s_name from score a LEFT JOIN student b on a.s_id &#x3D; b.s_id</span><br><span class="line"></span><br><span class="line">where a.c_id &#x3D; &#39;01&#39;and a.s_score&gt;80</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 39、求每门课程的学生人数 </span><br><span class="line"></span><br><span class="line">select count(*) from score GROUP BY c_id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 40、查询选修&quot;张三&quot;老师所授课程的学生中，成绩最高的学生信息及其成绩</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">-- 查询老师id	</span><br><span class="line"></span><br><span class="line">select c_id from course c,teacher d where c.t_id&#x3D;d.t_id and d.t_name&#x3D;&#39;张三&#39;</span><br><span class="line"></span><br><span class="line">-- 查询最高分（可能有相同分数）</span><br><span class="line"></span><br><span class="line">select MAX(s_score) from score where c_id&#x3D;&#39;02&#39;</span><br><span class="line"></span><br><span class="line">-- 查询信息</span><br><span class="line"></span><br><span class="line">select a.*,b.s_score,b.c_id,c.c_name from student a</span><br><span class="line"></span><br><span class="line">LEFT JOIN score b on a.s_id &#x3D; b.s_id</span><br><span class="line"></span><br><span class="line">LEFT JOIN course c on b.c_id&#x3D;c.c_id</span><br><span class="line"></span><br><span class="line">where b.c_id &#x3D;(select c_id from course c,teacher d where c.t_id&#x3D;d.t_id and d.t_name&#x3D;&#39;张三&#39;)</span><br><span class="line"></span><br><span class="line">and b.s_score in (select MAX(s_score) from score where c_id&#x3D;&#39;02&#39;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 41、查询不同课程成绩相同的学生的学生编号、课程编号、学生成绩 </span><br><span class="line"></span><br><span class="line">select DISTINCT b.s_id,b.c_id,b.s_score from score a,score b where a.c_id !&#x3D; b.c_id and a.s_score &#x3D; b.s_score</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 42、查询每门功成绩最好的前两名 </span><br><span class="line"></span><br><span class="line">-- 牛逼的写法</span><br><span class="line"></span><br><span class="line">select a.s_id,a.c_id,a.s_score from score a</span><br><span class="line"></span><br><span class="line">where (select COUNT(1) from score b where b.c_id&#x3D;a.c_id and b.s_score&gt;&#x3D;a.s_score)&lt;&#x3D;2 ORDER BY a.c_id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 43、统计每门课程的学生选修人数（超过5人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列  </span><br><span class="line"></span><br><span class="line">select c_id,count(*) as total from score GROUP BY c_id HAVING total&gt;5 ORDER BY total,c_id ASC</span><br><span class="line"></span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">-- 44、检索至少选修两门课程的学生学号 </span><br><span class="line"></span><br><span class="line">select s_id,count(*) as sel from score GROUP BY s_id HAVING sel&gt;&#x3D;2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 45、查询选修了全部课程的学生信息 </span><br><span class="line"></span><br><span class="line">select * from student where s_id in(		</span><br><span class="line"></span><br><span class="line">select s_id from score GROUP BY s_id HAVING count(*)&#x3D;(select count(*) from course))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--46、查询各学生的年龄</span><br><span class="line"></span><br><span class="line">-- 按照出生日期来算，当前月日 &lt; 出生年月的月日则，年龄减一</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select s_birth,(DATE_FORMAT(NOW(),&#39;%Y&#39;)-DATE_FORMAT(s_birth,&#39;%Y&#39;) - </span><br><span class="line"></span><br><span class="line">(case when DATE_FORMAT(NOW(),&#39;%m%d&#39;)&gt;DATE_FORMAT(s_birth,&#39;%m%d&#39;) then 0 else 1 end)) as age</span><br><span class="line"></span><br><span class="line">from student;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 47、查询本周过生日的学生</span><br><span class="line"></span><br><span class="line">select * from student where WEEK(DATE_FORMAT(NOW(),&#39;%Y%m%d&#39;))&#x3D;WEEK(s_birth)</span><br><span class="line"></span><br><span class="line">select * from student where YEARWEEK(s_birth)&#x3D;YEARWEEK(DATE_FORMAT(NOW(),&#39;%Y%m%d&#39;))</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">select WEEK(DATE_FORMAT(NOW(),&#39;%Y%m%d&#39;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 48、查询下周过生日的学生</span><br><span class="line"></span><br><span class="line">select * from student where WEEK(DATE_FORMAT(NOW(),&#39;%Y%m%d&#39;))+1 &#x3D;WEEK(s_birth)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 49、查询本月过生日的学生</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select * from student where MONTH(DATE_FORMAT(NOW(),&#39;%Y%m%d&#39;)) &#x3D;MONTH(s_birth)</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">-- 50、查询下月过生日的学生</span><br><span class="line"></span><br><span class="line">select * from student where MONTH(DATE_FORMAT(NOW(),&#39;%Y%m%d&#39;))+1 &#x3D;MONTH(s_birth)</span><br></pre></td></tr></table></figure>

<p><a href="https://mp.weixin.qq.com/s/79l09EPtZpLk5XZSLnQNLw" target="_blank" rel="noopener">上面五十道题目来源</a></p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>my-fifth-blog</title>
    <url>/2020/02/13/%E4%BB%A5%E5%89%8D%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%9C%E8%A5%BF/fifth/</url>
    <content><![CDATA[<h2 id="live2d"><a href="#live2d" class="headerlink" title="live2d"></a>live2d</h2><p>今天设置了一个 live2d的人物模型在右下角</p>
<font color =bule >

<p>老二刺猿了。。。。</p>
</font>

<h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>博客的根目录下执行下方命令：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm install hexo-helper-live2d --save</span><br></pre></td></tr></table></figure>

<h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install live2d-widget-model-你选的人物模型名字 --save</span><br></pre></td></tr></table></figure>

<h3 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h3><p>在主题config下 加入以下代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw&#x2F;</span><br><span class="line">  pluginJsPath: lib&#x2F;</span><br><span class="line">  pluginModelPath: assets&#x2F;</span><br><span class="line">  tagMode: false</span><br><span class="line">  log: false</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-&lt;你喜欢的模型名字&gt;</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: true</span><br></pre></td></tr></table></figure>

<h3 id="结束啦"><a href="#结束啦" class="headerlink" title="结束啦"></a>结束啦</h3><p>就这样hhh，老二刺猿做的事情 。。。</p>
]]></content>
      <categories>
        <category>daily</category>
      </categories>
      <tags>
        <tag>live2d</tag>
      </tags>
  </entry>
  <entry>
    <title>my fourth blog</title>
    <url>/2020/02/05/%E4%BB%A5%E5%89%8D%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%9C%E8%A5%BF/my-fourth-blog/</url>
    <content><![CDATA[<h1 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h1><p> 第四篇博客，虽然都不是什么有营养的东西，但是也看了很多教程，关于博客的搭建和博客的书写，昨天晚上看到了Typora软件的推荐，所以我用来试试，这篇博客后面的内容，用来写MarkDown的语法，和Typora不同的使用方法。</p>
]]></content>
      <categories>
        <category>daily</category>
      </categories>
      <tags>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>My third Blog</title>
    <url>/2020/02/02/%E4%BB%A5%E5%89%8D%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%9C%E8%A5%BF/my-third-bolg/</url>
    <content><![CDATA[<h1 id="My-third-Blog"><a href="#My-third-Blog" class="headerlink" title="My third Blog"></a>My third Blog</h1><p>categories:  daily </p>
<h5 id="1-经过了又一天的初步学习，并且下载了markdownpad-amp-amp-Notepad这两个软件，发现还是有很多东西需要学习并且会使用"><a href="#1-经过了又一天的初步学习，并且下载了markdownpad-amp-amp-Notepad这两个软件，发现还是有很多东西需要学习并且会使用" class="headerlink" title="1.经过了又一天的初步学习，并且下载了markdownpad&amp;&amp;Notepad这两个软件，发现还是有很多东西需要学习并且会使用"></a>1.经过了又一天的初步学习，并且下载了markdownpad&amp;&amp;Notepad这两个软件，发现还是有很多东西需要学习并且会使用</h5><h5 id="2-以后我的个人Bolg作为自己学习的储备室"><a href="#2-以后我的个人Bolg作为自己学习的储备室" class="headerlink" title="2.以后我的个人Bolg作为自己学习的储备室"></a>2.以后我的个人Bolg作为自己学习的储备室</h5><font color =red>

<blockquote>
<p>1，英语的写作可以屯进来，还有日语的写作<br>   2，日常学习的代码，整理一个相当于对自己有帮助的Blog出来<br>   3，可以当做自己的日记本~~<br></font>  </p>
</blockquote>
<h5 id="3，好好学习哈，加油"><a href="#3，好好学习哈，加油" class="headerlink" title="3，好好学习哈，加油~~"></a>3，好好学习哈，加油~~</h5><p>2020/2/2 17:34:46 </p>
]]></content>
      <categories>
        <category>daily</category>
      </categories>
      <tags>
        <tag>daily</tag>
      </tags>
  </entry>
  <entry>
    <title>my second blog</title>
    <url>/2020/02/02/%E4%BB%A5%E5%89%8D%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%9C%E8%A5%BF/my-second-blog/</url>
    <content><![CDATA[<p>1.整体的优化还没有完全弄完，还是要把前端的知识认真学完<br>2.这头像为什么有两个，没找出问题<br>3.先就这样吧，以后再慢慢的优化！！！</p>
<ol start="4">
<li>I can do it!!!!!!!!!!!<del>~</del>!!!!!!!!!</li>
</ol>
]]></content>
      <categories>
        <category>daily</category>
      </categories>
      <tags>
        <tag>搭博客</tag>
      </tags>
  </entry>
  <entry>
    <title>first blog</title>
    <url>/2020/02/01/%E4%BB%A5%E5%89%8D%E5%AD%A6%E4%B9%A0%E7%9A%84%E4%B8%9C%E8%A5%BF/first-blog/</url>
    <content><![CDATA[<p>开通自己的个人博客了，基于hexo还有GitHub的个人仓库，</p>
<p>为了好玩和记录，just like diary~</p>
]]></content>
      <categories>
        <category>daily</category>
      </categories>
      <tags>
        <tag>daily</tag>
      </tags>
  </entry>
</search>
